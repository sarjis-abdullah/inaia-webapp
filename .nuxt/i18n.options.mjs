export const localeCodes = ["de","en","fr"]

export const localeMessages = {
  "de": [],
  "en": [],
  "fr": [],
}

export const additionalMessages = Object({"de":[],"en":[],"fr":[],})

export const resolveNuxtI18nOptions = async (context) => {
  const nuxtI18nOptions = Object({})
  const vueI18nOptionsLoader = async (context) => Object({"fallbackLocale":"en","legacy":false,"locale":"en","messages": Object({"de":{
  "1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Januar"])},
  "2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Februar"])},
  "3": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["März"])},
  "4": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["April"])},
  "5": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mai"])},
  "6": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juni"])},
  "7": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juli"])},
  "8": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["August"])},
  "9": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["September"])},
  "10": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Oktober"])},
  "11": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["November"])},
  "12": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dezember"])},
  "15": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The fifteenth"])},
  "createAccount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account erstellen"])},
  "plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle einen Plan aus"])},
  "subscription_info": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Persönliche Daten"])},
  "conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geschäftsbedingungen"])},
  "accept_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir möchten dich per E-Mail oder auf anderem Wege über Produktupdates und weitere Dienste von INAIA auf dem Laufenden halten. Setze das Häkchen und gib uns deine Zustimmung."])},
  "step": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Schritt"])},
  "email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail"])},
  "password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort"])},
  "password_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Das Passwort muss min. aus 8 Zeichen bestehen und Sonderzeichen enthalten."])},
  "name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorname"])},
  "surname": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "referal_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Empfehlungscode (optional)"])},
  "your_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle das Land, in dem du behördlich gemeldet bist"])},
  "loading_country_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Länder konnten nicht geladen werden."])},
  "features": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Features"])},
  "monthly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["monatlich"])},
  "year": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jahr"])},
  "buy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jetzt kaufen"])},
  "choose_your_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle einen Plan aus"])},
  "monthly_billing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monthly billing"])},
  "yearly_billing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Yearly billing"])},
  "please_choose_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please choose your plan"])},
  "no_plans_for_selected_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Leider können wir aktuell noch keine Produkte in dem von dir gewählten Land anbieten."])},
  "plan_loading_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Pläne konnten nicht geladen werden."])},
  "plan_pricing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Preise"])},
  "register": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account-Registrierung - INAIA"])},
  "download_document": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dokument herunterladen"])},
  "server_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unbekannter Fehler: Verusche es später noch einmal."])},
  "error_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler"])},
  "phone_number": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer"])},
  "save": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Speichern"])},
  "account_info_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Daten konnten nicht gespeichert werden."])},
  "registration_success_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Account wurde erfolgreich erstellt."])},
  "verify_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail Adresse bestätigen"])},
  "verify_phone_number": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verify your phone number"])},
  "resend_email_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Keine E-Mail erhalten? Erneut senden"])},
  "resend_phone_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Keine SMS erhalten? Erneut senden"])},
  "email_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail erfolgreich bestätigt"])},
  "phone_number_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer erfolgreich bestätigt."])},
  "next": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Weiter"])},
  "signin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anmelden"])},
  "or": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])},
  "emailAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail Addresse"])},
  "rememberMe": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remember me"])},
  "forGotPassword": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgot your password?"])},
  "signIn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])},
  "check_creds": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Login fehlgeschlagen. \nDie Zugangsdaten sind nicht korrekt."])},
  "gold_purchase": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldkauf"])},
  "gold_sale": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldverkauf"])},
  "gold_sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldverkauf"])},
  "gold_withdrawal": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Entnahme"])},
  "gold_delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auslieferung"])},
  "gold_gift": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gutschrift"])},
  "gold_purchase_interval": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldkauf - Sparplan"])},
  "gold_transfer_in": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldtransfer in"])},
  "gold_transfer_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldtransfer out"])},
  "PAYMENT_IN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungseingang"])},
  "PAYMENT_OUT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["SEPA-Überweisung"])},
  "FUND_TRANSFER": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geldtransfer"])},
  "WITHDRAWAL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bargeldbezug"])},
  "REDEMPTION": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Karteneinsatz"])},
  "gold_refund": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung Goldkauf"])},
  "silver_delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silber-Auslieferung"])},
  "silver_sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberverkauf"])},
  "silver_purchase": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberkauf"])},
  "silver_withdrawal": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Entnahme"])},
  "silver_gift": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gutschrift"])},
  "silver_purchase_interval": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberkauf - Sparplan"])},
  "silver_transfer_in": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silbertransfer in"])},
  "silver_transfer_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silbertransfer out"])},
  "silver_refund": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung Silberkauf"])},
  "yearly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["jährlich"])},
  "phone_number_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gebe den 4-stelligen Verifizierungscode ein, den wir dir gesendet haben an"])},
  "choose_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle das Land, in dem du behördlich gemeldet bist"])},
  "line1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Straße Hausnummer"])},
  "line2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresszusatz (optional)"])},
  "postalCode": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Postleitzahl"])},
  "town": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stadt"])},
  "region": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bundesland/Region"])},
  "general_conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Allgemeine Geschäftsbedingungen (AGB)"])},
  "privacy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Datenschutzerklärung"])},
  "term_of_use": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nutzungsbedingungen"])},
  "imprint": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Impressum"])},
  "enter_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wohnungsanschrift"])},
  "registration_done": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fertig"])},
  "verify_phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer bestätigen"])},
  "verify_email_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Überprüfe deine Inbox und trage hier den Code ein, den wir die per E-Mail zugeschickt haben:"])},
  "reset_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort zurücksetzen"])},
  "email_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte geben Sie eine E-Mail-Adresse an"])},
  "new_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neues Passwort"])},
  "password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte gebe ein neues Passwort ein"])},
  "confirm_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort bestätigen"])},
  "confirm_password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte bestätige dein neues Passwort"])},
  "password_reset_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort erfolgreich zurückgesetzt"])},
  "confirm": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bestätigen"])},
  "pin_reset_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PIN erfolgreich zurückgesetzt. Bitte melde dich erneut in der App an, um eine neue PIN festzulegen"])},
  "resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir setzen deine PIN zurück. Bitte warte eien Moment und verlasse diese Seite nicht..."])},
  "error_resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler beim Zurücksetzen deiner PIN"])},
  "reset_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PIN zurücksetzen"])},
  "error_resetting_pin_no_token": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Ungültiger Token"])},
  "depot_status_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aktiv"])},
  "depot_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abgesagt"])},
  "depot_status_paused": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paused"])},
  "depot_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Completed"])},
  "depot_status_blocked": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Blocked"])},
  "depot_status_applied_for_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Applied"])},
  "depot_status_withdrawn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawn"])},
  "depot_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "status": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Status"])},
  "amount_euro": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in euro"])},
  "amount_gram": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in gram"])},
  "details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Details"])},
  "Savingplan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan"])},
  "Gold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold"])},
  "Silver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silber"])},
  "cant_load_depot_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are enable to load the list of depots"])},
  "orderOverview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auftragsübersicht"])},
  "order_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausgeführt"])},
  "order_status_pending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])},
  "order_status_paid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungseingang"])},
  "order_status_processing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In Bearbeitung"])},
  "order_status_payment_failed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlung offen"])},
  "order_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Storniert"])},
  "order_status_refunded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung"])},
  "order_status_payment_outstanding": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])},
  "order_status_payment_inprogress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])},
  "order_status_reverted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])},
  "type": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])},
  "latest_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Letzte Transaktionen"])},
  "depots": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depots"])},
  "request_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort vergessen?"])},
  "password_request_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir haben dir einen Link geschickt, mit dem du dein Passwort zurücksetzen kannst."])},
  "silver_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberpreis"])},
  "gold_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldpreis"])},
  "gold_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldpreis in Gramm"])},
  "silver_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberpreis in Gramm"])},
  "month": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monat"])},
  "max": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])},
  "depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])},
  "see_more": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehr"])},
  "date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Datum"])},
  "course": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kurs"])},
  "purchase_amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kaufbetrag"])},
  "agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abschlussentgelt"])},
  "gold_amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Menge"])},
  "amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Betrag"])},
  "bank_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Überweisung"])},
  "bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankverbindung"])},
  "payment_method": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungsmethode"])},
  "cant_load_orders_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are not able to load the orders list"])},
  "depot_detail": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])},
  "dashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dashboard"])},
  "min": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])},
  "depot_value": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot value"])},
  "performance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])},
  "orders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])},
  "from": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["von"])},
  "contract_term": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])},
  "interval_day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abbuchung zum"])},
  "whyInvestInGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Warum in Gold anlegen?"])},
  "whyInvestInSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Warum in Silber anlegen?"])},
  "advantagesOfSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorteile von Silber"])},
  "crisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Krisenresistente Wertanlage in physisches Gold (999/1000)"])},
  "inflationProof": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inflationssicher"])},
  "optimalWealthAccumulation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Optimaler Vermögensaufbau"])},
  "benefitsGoldGreenGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Ethisch und nachhaltig bei Förderung, Transport und Raffination."])},
  "LBMAcertified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["LBMA-zertifiziert"])},
  "noTva": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehrwertsteuerfrei (19 %)"])},
  "silverCrisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Krisenresistente Wertanlage in physisches Silber"])},
  "ondemandDelivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auf Wunsch Auslieferung möglich"])},
  "securedStorageGermany": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lagerung im Hochsicherheitstresor in Deutschland"])},
  "industryDemanded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Hohe industrielle Nachfrage"])},
  "storageInSwitzerland": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lagerung im Zollfreilager in der Schweiz"])},
  "tvaExempted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehrwertsteuerfrei (19 %) durch Lagerung im Zollfreilager in der Schweiz"])},
  "choose_purpose": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purose of the depot"])},
  "set_the_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name of the depot"])},
  "savings_plan_contract": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set the saving plan contract"])},
  "savings_plan_summary": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm saving plan contract"])},
  "new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create new depot"])},
  "new_gold_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New gold depot"])},
  "new_silver_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New silver depot"])},
  "start": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])},
  "reasonForDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wofür möchtest du sparen?"])},
  "set": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])},
  "createYourPlanInSomeMinutes": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstelle deinen Sparplan\nin wenigen Minuten"])},
  "createGoldSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monatlich ein Goldvermögen aufbauen"])},
  "createGoldSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit dem INAIA Gold Dinar Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Gold (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Gold ein und übernehmen die sichere Lagerung für dich."])},
  "createSilverSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monatlich ein Silbervermögen aufbauen"])},
  "createSilverSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit dem INAIA Silber Dirham Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Silber (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Silber ein und übernehmen die sichere Lagerung für dich."])},
  "createDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot anlegen"])},
  "depotCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Depot wurde erfolgreich angelegt"])},
  "createDepotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte bestätige die unten stehenden Sonderbedingungen, um dein Depot anzulegen. Es entstehen keine Kosten für die Erstellung des Depots. Lagerkosten fallen erst an, wenn du deine erste Transaktion erstellt hast."])},
  "setupSavingPlanNow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan einrichten"])},
  "errorOccured": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Es ist ein Fehler aufgetreten"])},
  "tryAgain": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versuchen Sie es nochmal"])},
  "calculateTrustData": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vertragsdaten kalkulieren"])},
  "projectedPerformance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prognostizierte Wertentwicklung"])},
  "agioPaymentOption1Title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75/25"])},
  "agioPaymentOption2Title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sofort bezahlen"])},
  "fiftyOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit 25 % des Sparbetrags kaufen wir für dich Gold ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist."])},
  "fiftyOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit 25 % des Sparbetrags kaufen wir für dich Silber ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist."])},
  "oneOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Goldkauf."])},
  "oneOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Silberkauf."])},
  "seeReamboursmentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tilgungsplan anzeigen"])},
  "startnewKyc": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neuen Prozess starten"])},
  "startAutoIdtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Um deine Identität zu bestätigen, führe bitte die automatische Identitätsprüfung durch. Halte dazu dein Ausweisdokument bereit."])},
  "continueAutIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte schließe die automatische Identitätsprüfung ab, um deine Identität zu bestätigen. Halte dazu dein Ausweisdokument bereit."])},
  "failedAutoIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die automatische Identitätsprüfung ist fehlgeschlagen. Bitte starten den Prozess neu."])},
  "continueAutoId": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Identitätsprüfung fortsetzen"])},
  "accountHolder": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kontoinhaber"])},
  "iban": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])},
  "setAsDefault": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set as default"])},
  "authorizeInaiaToAcceptPayment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ich ermächtige die INAIA GmbH, Zahlungen von meinem Konto mittels Lastschrift einzuziehen. Zugleich weise ich mein Kreditinstitut an, die von der INAIA GmbH auf mein Konto gezogenen Lastschriften einzulösen."])},
  "kycStatusIsPending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Identitätsnachweis wird nun von uns geprüft. Dieser Prozess sollte innerhalb von 24 Stunden abgeschlossen sein."])},
  "kycStatusIsFailed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der Verifizierungsprozess ist leider fehlgeschlagen. Bitte starte den Vorgang erneut und stelle sicher, dass die angegebenen Daten mit denen in deinem Ausweisdokument übereinstimmen."])},
  "downloadPDF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PDF herunterladen"])},
  "startDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Startdatum"])},
  "endDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enddatum"])},
  "write_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Antwort schreiben..."])},
  "send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nachricht senden"])},
  "select_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle ein Ticket um Nachrichten einzusehen."])},
  "new": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neu"])},
  "closed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geschlossen"])},
  "open": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Offen"])},
  "has_new_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Beantwortet"])},
  "has_new_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neue Nachricht"])},
  "support_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support-Tickets"])},
  "subject": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Betreff"])},
  "creation_date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellungsdatum"])},
  "loading_ticket_details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lade Support-Ticket-Details"])},
  "send": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["schicken"])},
  "create": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellt"])},
  "create_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellt ticket"])},
  "new_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neues ticket"])},
  "close_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wenn Sie dieses Ticket schließen, können Sie dieses Gespräch nicht fortsetzen"])},
  "close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ticket schließen"])},
  "today": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Heute"])},
  "cant_send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])},
  "ticket_opened_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])},
  "ticket_closed_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])},
  "ticket_closed_unsuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])},
  "are_you_sure_you_want_to_close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])},
  "are_you_sure_you_want_to_open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])},
  "open_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])},
  "message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nachricht"])},
  "client": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Klientin"])},
  "write_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Schreiben nachricht ..."])},
  "ok": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])},
  "ticketCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein ticket wurde erfolgreich angelegt"])},
  "open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])},
  "old_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Altes Passwort"])},
  "update_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort aktualisieren"])},
  "password_confirmation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort bestätigen"])},
  "password_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort aktualisiert"])},
  "password_update_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nach dem Ändern Ihres Passworts werden Sie abgemeldet. Bitte melden Sie sich erneut mit Ihrem neuen Passwort an, um fortzufahren."])},
  "password_mismatch_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die eingegebenen Passwörter stimmen nicht überein."])},
  "depot_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot-Avatar aktualisiert"])},
  "profile_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profil-Avatar aktualisiert"])},
  "minimumAmountRequired": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Der Mindestbetrag beträgt 25 ", _interpolate(_named("currency"))])},
  "showPreview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorschau anzeigen"])},
  "depotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])},
  "purshaseSellNote": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Hinweis: Die hier aufgeführte Übersicht stellt keine verbindliche Auftragsannahme dar. Der Kauf- bzw. Verkaufsauftrag kommt erst mit Zusendung der Auftragsbestätigung per E-Mail zustande.\nEs gelten die Kauf- und Verkaufsintervalle in unseren Geschäftsbedingungen."])},
  "buyingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die Käufe im Fremdgeschäft (Wakalah-Transaktion) werden unverzüglich zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 2 Arbeitstagen nach Geldeingang ausgeführt."])},
  "buygoldtooltip": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der hier angezeigt Kurs dient lediglich der ungefähren Einschätzung. Der tatsächliche Kurs zum Tag der Ausführung deines Auftrags kann hiervon abweichen."])},
  "your_profile": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profil"])},
  "sign_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Logout"])},
  "trading": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Trading"])},
  "select": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auswählen"])},
  "buy_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets purshase"])},
  "sell_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets sell"])},
  "asset_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets transfer"])},
  "minimumGoldSellRequired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der Mindestbetrag beträgt 1 g"])},
  "youHaveLessThanOneGramSellAll": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bei einem Goldbestand von weniger als 1 g kannst du nur den kompletten Restbestand verkaufen."])},
  "deliverGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der angegebene Wert darf die verfügbare Menge in Gramm nicht überschreiten und muss mindestens 20 g betragen"])},
  "execution": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausführung"])},
  "paymentMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungsmethode"])},
  "totalAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gesamtbetrag"])},
  "maxAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max. Betrag"])},
  "transaction_fee": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaktionsgebühr"])},
  "asSoonAsPossible": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nächstmöglich*"])},
  "confirmwithmobiletext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using your mobile pin by using the app installed on your device"])},
  "confirmwithemailtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your email"])},
  "confirmwithsmstext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your phone number by sms"])},
  "donthaveaccesstoconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You don't have access to"])},
  "changeconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Change your confirmation method"])},
  "confirmationMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation method"])},
  "orderexpired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmation expired"])},
  "sellGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Menge darf Goldbestand nicht übersteigen."])},
  "availableAmountNonZero": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depotbestand ist leer. Verkauf nicht möglich."])},
  "blockedAmountdetails": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verfügbare Menge"])},
  "blockedAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])},
  "tradeableAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verfügbar"])},
  "pendingOrders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaktionen ausstehend"])},
  "blockedAmountExplanation": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Die Menge von ", _interpolate(_named("blockedAmount")), " Gramm ist derzeit nicht handelbar. Dies kann an Widerrufsfristen, am SEPA-Lastschriftverfahren oder einem noch offenen Abschlussentgelt liegen. Sobald Sicherheitsfristen vorüber sind, wird die entsprechende Menge zum Handel freigegeben."])},
  "tomorrow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["morgen"])},
  "availableIn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available in"])},
  "To": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bis"])},
  "available": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["verfügbar"])},
  "sellingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verkaufsaufträge werden durch INAIA immer zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 7 Arbeitstagen ausgeführt."])},
  "TakingIntoAccountTheValidWorkingHours": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unter Berücksichtigung der gültigen Handelszeiten."])},
  "deliveryAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lieferadresse"])},
  "shippingCost": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versandkosten"])},
  "delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auslieferung"])},
  "receiverDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Senden an"])},
  "orderconfirmed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmed"])},
  "backToDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Back to depot"])},
  "welcome": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Willkommen"])},
  "orderdeclined": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The order has been declined"])},
  "full_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "email_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])},
  "phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Handynummer"])},
  "address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse"])},
  "update": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aktualisieren"])},
  "delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Löschen"])},
  "mark_default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Als Standard markieren"])},
  "add_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankdaten hinzufügen"])},
  "language": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sprache"])},
  "bank_accounts": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankverbindungen"])},
  "default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Standard"])},
  "de": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Deutsch"])},
  "en": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Englisch"])},
  "fr": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Französisch"])},
  "cancel": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abbrechen"])},
  "confirm_delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Löschung bestätigen"])},
  "do_you_want_to_delete_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sind Sie sicher, dass Sie dieses Bankkonto löschen wollen?"])},
  "showing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["mit"])},
  "sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verkaufen"])},
  "results": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["resultate"])},
  "of": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["von"])},
  "no_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan"])},
  "saving_plan_not_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan is set"])},
  "add_saving_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan einrichten"])},
  "duration": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Duration"])},
  "years": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jahre"])},
  "startdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vertragsbeginn"])},
  "savings": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparsumme"])},
  "returns": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Returns"])},
  "day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tag"])},
  "billing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Billing"])},
  "payment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])},
  "deposit": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Einzahlung"])},
  "total_agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abschlussentgelt"])},
  "savings_rate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparbetrag"])},
  "accept": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bestätigen"])},
  "installment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Installment"])},
  "paymentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tilgungsplan"])},
  "creatingdepotpleasewait": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creating depot, plase wait..."])},
  "goToDashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to dashbaord"])},
  "chooseSenderDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose the depot you want to send from"])},
  "please_verify_account_to_create_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please finish your identity check in order to start creating depots"])},
  "create_new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Currently you have no depots, please create new silver or gold depot to start."])},
  "you_have_no_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no transactions"])},
  "personalInformation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Persönliche Daten"])},
  "gender": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anrede"])},
  "birthdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geburtsdatum"])},
  "nationality": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Staatsangehörigkeit"])},
  "birthplace": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geburtsort"])},
  "go_to_login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to login"])},
  "you_have_no_message_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Du hast noch keine Nachrichten in deiner Inbox."])},
  "you_have_no_support_ticket_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sie haben noch kein Support-Ticket."])},
  "inboxMessages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inbox (virtuelles Postfach)"])},
  "supportTickets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support-Tickets"])},
  "inaiaSupport": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["INAIA Kundenservice"])}
},"en":{
  "1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["January"])},
  "2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["February"])},
  "3": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["March"])},
  "4": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["April"])},
  "5": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["May"])},
  "6": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["June"])},
  "7": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["July"])},
  "8": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["August"])},
  "9": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["September"])},
  "10": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["October"])},
  "11": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["November"])},
  "12": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["December"])},
  "15": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The fifteenth"])},
  "createAccount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create your account"])},
  "plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your plan"])},
  "subscription_info": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Personal data"])},
  "conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Approve our conditions"])},
  "accept_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We would like to keep you informed about product updates and other services from INAIA via email or other means. Check the box and give us your consent."])},
  "step": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Step"])},
  "email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email"])},
  "password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password"])},
  "password_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your password must be at least 8 character long and must contains special characters"])},
  "name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "surname": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Surname"])},
  "referal_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Referal code"])},
  "your_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Country of your residence"])},
  "loading_country_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Server error: We couldn't load country list."])},
  "features": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Features"])},
  "monthly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["monthly"])},
  "yearly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["yearly"])},
  "buy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Buy"])},
  "choose_your_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your plan and start saving Gold today"])},
  "no_plans_for_selected_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["There is no plans for the selected country, please choose another country"])},
  "plan_loading_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't load plans, cause of server error"])},
  "plan_pricing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pricing Plans"])},
  "register": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account Registration - INAIA"])},
  "download_document": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Download document"])},
  "server_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["An error has occurred: server error on request."])},
  "error_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Error"])},
  "phone_number": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number"])},
  "phone_number_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enter the 4-digit verification code we sent to you to"])},
  "save": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Save"])},
  "account_info_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't save the information please try again later"])},
  "registration_success_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Thank you for your registration! Please download the INAIA App at Apple App Store or at Google Play."])},
  "resend_email_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Resend email code"])},
  "resend_phone_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Resend phone number code"])},
  "email_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email verified"])},
  "phone_number_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number verified"])},
  "next": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Next"])},
  "signin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])},
  "or": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])},
  "emailAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email address"])},
  "rememberMe": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remember me"])},
  "forGotPassword": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgot your password?"])},
  "signIn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])},
  "check_creds": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Access denied. \nInvalid credentials."])},
  "gold_purchase": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold purchase"])},
  "gold_sale": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold sell"])},
  "gold_sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold sell"])},
  "gold_withdrawal": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold withdrawal"])},
  "gold_delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold delivery"])},
  "gold_gift": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold gift"])},
  "gold_purchase_interval": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold Purchase - Recurring"])},
  "gold_transfer_in": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold transfer in"])},
  "gold_transfer_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold transfer out"])},
  "PAYMENT_IN": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment in"])},
  "PAYMENT_OUT": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment out"])},
  "FUND_TRANSFER": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fund transfer"])},
  "WITHDRAWAL": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawal"])},
  "REDEMPTION": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Card redemption"])},
  "gold_refund": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold refund"])},
  "silver_delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver delivery"])},
  "silver_sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver sell"])},
  "silver_purchase": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver purchase"])},
  "silver_withdrawal": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver withdrawal"])},
  "silver_gift": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver gift"])},
  "silver_purchase_interval": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver Purchase - Recurring"])},
  "silver_transfer_in": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver transfer in"])},
  "silver_transfer_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver transfer out"])},
  "silver_refund": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver refund"])},
  "choose_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your country"])},
  "line1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Street / House no."])},
  "line2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Addition to address (optional)"])},
  "postalCode": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Postcode"])},
  "town": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["City"])},
  "region": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["State"])},
  "general_conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["General conditions"])},
  "privacy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Privacy policy"])},
  "term_of_use": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Terms of use"])},
  "imprint": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Imprint"])},
  "enter_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your address"])},
  "registration_done": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Congratulations"])},
  "verify_phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm your phone number"])},
  "verify_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm your email"])},
  "verify_email_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Check your inbox and enter the code we sent you via email here:"])},
  "reset_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reset your password"])},
  "email_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please provide an email"])},
  "new_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New password"])},
  "password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please provide a new password"])},
  "confirm_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm new password"])},
  "confirm_password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please confirm your new password"])},
  "password_reset_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password was reset successfully"])},
  "confirm": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm"])},
  "pin_reset_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pin rest successfully, please login to the app again to set a new pin"])},
  "resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are resetting your pin, please wait and don't leave the page.."])},
  "error_resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Error resetting your pin"])},
  "reset_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reset your pin"])},
  "error_resetting_pin_no_token": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No token was available to rest your pin"])},
  "depot_status_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Active"])},
  "depot_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Canceled"])},
  "depot_status_paused": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paused"])},
  "depot_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Completed"])},
  "depot_status_blocked": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Blocked"])},
  "depot_status_applied_for_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Applied"])},
  "depot_status_withdrawn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawn"])},
  "depot_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "status": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Status"])},
  "amount_euro": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in euro"])},
  "amount_gram": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in gram"])},
  "details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Details"])},
  "Savingplan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings plan"])},
  "Gold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold"])},
  "Silver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver"])},
  "cant_load_depot_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are unable to load the list of depots"])},
  "order_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["completed"])},
  "order_status_pending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pending"])},
  "order_status_paid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["paid"])},
  "order_status_processing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["processing"])},
  "order_status_payment_failed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["failed"])},
  "order_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["canceled"])},
  "order_status_refunded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["refunded"])},
  "order_status_payment_outstanding": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiment outstanding"])},
  "order_status_payment_inprogress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pending"])},
  "order_status_reverted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])},
  "type": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])},
  "latest_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Recent transactions"])},
  "depots": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depots"])},
  "request_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgotten your password?"])},
  "password_request_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We have emailed you a link to reset your password."])},
  "silver_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver price"])},
  "gold_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold price"])},
  "gold_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold gram price"])},
  "silver_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver gram price"])},
  "month": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Month"])},
  "max": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])},
  "year": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Year"])},
  "depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])},
  "see_more": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["See more"])},
  "date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date"])},
  "course": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Course"])},
  "purchase_amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Purchase amount"])},
  "agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaction fee (agio)"])},
  "gold_amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold amount"])},
  "amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount"])},
  "bank_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bank transfer"])},
  "bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bank account"])},
  "payment_method": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment method"])},
  "cant_load_orders_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are not able to load the orders list"])},
  "depot_detail": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])},
  "dashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dashboard"])},
  "min": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])},
  "depot_value": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot value"])},
  "performance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])},
  "orders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])},
  "from": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["From"])},
  "contract_term": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])},
  "interval_day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Interval day"])},
  "whyInvestInGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Why invest in gold?"])},
  "whyInvestInSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Why invest in silver?"])},
  "advantagesOfSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Benefits of silver"])},
  "crisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Crisis-resistant investment"])},
  "inflationProof": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inflation proof"])},
  "optimalWealthAccumulation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ideal for building wealth"])},
  "benefitsGoldGreenGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Ethical and sustainable in extraction, transportation and refining."])},
  "LBMAcertified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Certified by LBMA"])},
  "noTva": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["VAT free"])},
  "silverCrisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Crisis-resistant investment in physical silver"])},
  "ondemandDelivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["On demand delivery"])},
  "securedStorageGermany": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Secured storage in Germany"])},
  "industryDemanded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["High demand by industries"])},
  "storageInSwitzerland": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stored in Switzerland"])},
  "tvaExempted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["VAT exempt (19%) through storage in a duty-free warehouse in Switzerland."])},
  "choose_purpose": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purose of the depot"])},
  "set_the_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot name"])},
  "savings_plan_contract": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set the saving plan contract"])},
  "savings_plan_summary": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm saving plan contract"])},
  "new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create new depot"])},
  "new_gold_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New gold depot"])},
  "new_silver_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New silver depot"])},
  "start": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])},
  "reasonForDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["What do you want to save for?"])},
  "set": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])},
  "createYourPlanInSomeMinutes": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup your savings plan within minutes"])},
  "createGoldSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Build a gold fortune every month"])},
  "createGoldSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["With the INAIA Gold Dinar savings plan you invest your money in pure physical gold (999/1000) without interest. You set an amount that you want to invest monthly. We buy gold from it every month and take care of the safe storage for you."])},
  "createSilverSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["INAIA Silver dirham enables you to invest your money in the purest physical silver (999/1000) without interest. You set the money amount that you want to invest, we will use that amount to buy silver for you and store it in a safe storage "])},
  "createSilverSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Build a silver fortune every month"])},
  "createDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create depot"])},
  "depotCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your depot has been created successfully"])},
  "createDepotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please confirm the conditions below to create your depot. There are no costs for creating the depot. Storage costs will be only applied once you have created your first transaction."])},
  "setupSavingPlanNow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup savings plan"])},
  "errorOccured": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["An error has occured."])},
  "tryAgain": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please try again."])},
  "calculateTrustData": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Calculate contract data"])},
  "projectedPerformance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance forecast"])},
  "agioPaymentOption1Title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75/25"])},
  "agioPaymentOption2Title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pay immediately"])},
  "fiftyOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We buy gold for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off."])},
  "fiftyOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We buy silver for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off."])},
  "oneOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the gold purchase right from the start."])},
  "oneOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the silver purchase right from the start."])},
  "seeReamboursmentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Show payment table"])},
  "startnewKyc": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start new process"])},
  "startAutoIdtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to finish your identity check, you need to start the auto identification either in app or by link (please keep your ID card near to you)"])},
  "continueAutIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to finish your identity check, you need to continue the auto identification either in app or by link (please keep your ID card near to you)"])},
  "failedAutoIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your auto identification failed, please start a new identity check process."])},
  "continueAutoId": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Continue identification"])},
  "accountHolder": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account holder"])},
  "iban": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])},
  "setAsDefault": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set as default"])},
  "authorizeInaiaToAcceptPayment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["I authorize INAIA GmbH to accept payments from my account using collect direct debit. At the same time, I instruct my bank to redeem the direct debits drawn on my account by INAIA GmbH"])},
  "kycStatusIsPending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We will now check your proof of identity. This process should be completed within 24 hours."])},
  "kycStatusIsFailed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unfortunately the verification process failed. Please start the process again and make sure that the details provided match those in your ID document."])},
  "downloadPDF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Download PDF"])},
  "startDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start Date"])},
  "endDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["End Date"])},
  "write_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Write an answer..."])},
  "send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Send message"])},
  "select_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please select a ticket to see description"])},
  "new": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New"])},
  "closed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Closed"])},
  "open": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["open"])},
  "has_new_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Answered"])},
  "has_new_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New message"])},
  "support_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support tickets"])},
  "subject": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Subject"])},
  "creation_date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creation date"])},
  "loading_ticket_details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Loading support ticket details"])},
  "send": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Send"])},
  "create": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create"])},
  "create_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create ticket"])},
  "new_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New ticket"])},
  "close_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["by closing this ticket you won't be able to continue this conversation"])},
  "close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Close ticket"])},
  "today": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Today"])},
  "cant_send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])},
  "ticket_opened_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])},
  "ticket_closed_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])},
  "ticket_closed_unsuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])},
  "are_you_sure_you_want_to_close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])},
  "are_you_sure_you_want_to_open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])},
  "open_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])},
  "message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Message"])},
  "client": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Client"])},
  "write_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Write message ..."])},
  "ok": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])},
  "ticketCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your support ticket has been created successfully"])},
  "open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])},
  "old_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Old password"])},
  "update_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Update password"])},
  "password_confirmation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm password"])},
  "password_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password updated"])},
  "password_update_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["After changing your password, you will be logged out. Please log in again with your new password to continue."])},
  "password_mismatch_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The passwords you entered don't match."])},
  "depot_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot avatar updated"])},
  "profile_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile avatar updated"])},
  "minimumAmountRequired": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["A minimum purchase amount of 25 ", _interpolate(_named("currency")), " is required"])},
  "showPreview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Preview"])},
  "depotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])},
  "buyingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purchases in the third-party transaction (Wakalah transaction) will be executed promptly at the earliest possible time, but no later than within 2 business days after receipt of funds."])},
  "purshaseSellNote": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Note: The overview given here does not represent a binding order acceptance. The purchase or sale order only comes into effect when the order confirmation is sent by e-mail.\nThe purchase and sale intervals in our terms and conditions apply."])},
  "buygoldtooltip": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The shown rate is only intended as an approximate estimate. The actual rate on the day your order is executed may deviate"])},
  "your_profile": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile"])},
  "sign_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Logout"])},
  "trading": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Trading"])},
  "select": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Select"])},
  "buy_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets purchase"])},
  "sell_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets sell"])},
  "asset_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets transfer"])},
  "minimumGoldSellRequired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A minimum of 1 gram is required to sell"])},
  "youHaveLessThanOneGramSellAll": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have less than 1g of gold in this depot, you can only sell all your gold amount"])},
  "deliverGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Given value must not exceed available gram amount and must be at least 20g"])},
  "orderOverview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order details"])},
  "execution": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Execution"])},
  "paymentMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])},
  "totalAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Total amount"])},
  "maxAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Maximum amount"])},
  "transaction_fee": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaction fee"])},
  "asSoonAsPossible": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Next possible*"])},
  "confirmwithmobiletext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using your mobile pin by using the app installed on your device"])},
  "confirmwithemailtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your email"])},
  "confirmwithsmstext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your phone number by sms"])},
  "donthaveaccesstoconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You don't have access to"])},
  "changeconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Change your confirmation method"])},
  "confirmationMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation method"])},
  "orderexpired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmation expired"])},
  "sellGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Given value must not exceed available gold amount."])},
  "availableAmountNonZero": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This depot has no assets, you are not able to sell"])},
  "blockedAmountdetails": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tradable amount"])},
  "blockedAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Outstanding"])},
  "tradeableAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available"])},
  "pendingOrders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pending orders"])},
  "blockedAmountExplanation": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["The amount of ", _interpolate(_named("blockedAmount")), " grams is currently not available for trading. This can be due to cancellation periods, the SEPA direct debit procedure or an outstanding subscription fee. As soon as safety periods have passed, the corresponding quantity is free for trade."])},
  "tomorrow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tomorrow"])},
  "availableIn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available in"])},
  "To": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["to"])},
  "available": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["available"])},
  "sellingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sales orders are always executed by INAIA at the earliest possible time, but no later than within 7 business days."])},
  "TakingIntoAccountTheValidWorkingHours": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depending on trading hours."])},
  "deliveryAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Shipping address"])},
  "shippingCost": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Shipping costs"])},
  "delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Delivery"])},
  "receiverDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Receiver"])},
  "orderconfirmed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmed"])},
  "backToDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Back to depot"])},
  "welcome": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Welcome"])},
  "orderdeclined": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The order has been declined"])},
  "full_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "email_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])},
  "phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number"])},
  "address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Address"])},
  "update": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Update"])},
  "delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Delete"])},
  "mark_default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mark as default"])},
  "add_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Add new bank account"])},
  "language": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Language"])},
  "bank_accounts": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your bank accounts"])},
  "default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Default"])},
  "de": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["German"])},
  "en": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["English"])},
  "fr": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["French"])},
  "cancel": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Cancel"])},
  "confirm_delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm deletion"])},
  "do_you_want_to_delete_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to delete this bank account?"])},
  "showing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Showing"])},
  "sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sell"])},
  "results": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["results"])},
  "of": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["of"])},
  "no_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan"])},
  "saving_plan_not_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan is set"])},
  "add_saving_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup savings plan"])},
  "monthlysavingrate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monthly savings"])},
  "duration": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Duration"])},
  "years": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Years"])},
  "startdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start date"])},
  "savings": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings sum"])},
  "returns": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Returns"])},
  "day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Day"])},
  "billing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Billing"])},
  "payment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])},
  "deposit": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Deposit"])},
  "total_agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Subscription fee"])},
  "savings_rate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings rate"])},
  "accept": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Accept"])},
  "installment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Installment"])},
  "paymentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment table"])},
  "creatingdepotpleasewait": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creating depot, plase wait..."])},
  "goToDashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to dashbaord"])},
  "chooseSenderDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose the depot you want to send from"])},
  "please_verify_account_to_create_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please finish your identity check in order to start creating depots"])},
  "create_new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Currently you have no depots, please create new silver or gold depot to start."])},
  "you_have_no_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no transactions"])},
  "you_have_no_message_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You currently have no messages in your inbox."])},
  "you_have_no_support_ticket_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no support ticket yet."])},
  "personalInformation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Personal information"])},
  "gender": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gender"])},
  "birthdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Birthday"])},
  "nationality": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nationality"])},
  "birthplace": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Birthplace"])},
  "go_to_login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to login"])},
  "inboxMessages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inbox messages"])},
  "supportTickets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support tickets"])},
  "inaiaSupport": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["INAIA Support"])}
},"fr":{
  "1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Janvier"])},
  "2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Février"])},
  "3": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mars"])},
  "4": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avril"])},
  "5": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mai"])},
  "6": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juin"])},
  "7": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juillet"])},
  "8": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aout"])},
  "9": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Septembre"])},
  "10": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Octobre"])},
  "11": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Novembre"])},
  "12": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Décembre"])},
  "15": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le quanze"])},
  "createAccount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un compte"])},
  "plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre plan"])},
  "subscription_info": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Données personnelles"])},
  "conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions générales"])},
  "accept_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous souhaitons vous tenir informé par e-mail ou par d'autres moyens des mises à jour du produit et des autres services d'INAIA. Cochez la case et donnez-nous votre accord."])},
  "step": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Étape"])},
  "email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])},
  "password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe"])},
  "password_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le mot de passe doit contenir au moins 8 caractères et des caractères spéciaux."])},
  "name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prénom"])},
  "surname": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom"])},
  "referal_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Code de parrainage (facultatif)"])},
  "your_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre pays de résidence"])},
  "loading_country_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible de charger la liste des pays."])},
  "features": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fonctionnalités"])},
  "monthly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["mensuel"])},
  "yearly": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["annuel"])},
  "buy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Acheter maintenant"])},
  "choose_your_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre plan"])},
  "no_plans_for_selected_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Malheureusement, nous ne pouvons pas encore proposer de produits dans le pays que vous avez choisi."])},
  "plan_loading_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible de charger les plans."])},
  "plan_pricing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tarifs"])},
  "register": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["S'inscrire - INAIA"])},
  "download_document": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Télécharger le document"])},
  "server_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur inconnue. Veuillez réessayer ultérieurement."])},
  "error_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur"])},
  "phone_number": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de téléphone portable"])},
  "phone_number_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Saisissez le code de vérification à 4 chiffres que nous vous avons envoyé au"])},
  "save": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enregistrer"])},
  "account_info_error": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible d'enregistrer les informations."])},
  "registration_success_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre compte a été créé avec succès."])},
  "resend_email_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas reçu d'e-mail ? Renvoyer"])},
  "resend_phone_code": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas reçu de SMS ? Renvoyer"])},
  "email_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse e-mail vérifiée avec succès"])},
  "phone_number_verified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de téléphone portable vérifié avec succès."])},
  "next": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Suivant"])},
  "signin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Se connecter"])},
  "or": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ou bien"])},
  "emailAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse e-mail"])},
  "choose_country": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre pays de résidence"])},
  "line1": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Rue et numéro"])},
  "line2": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Complément d'adresse (facultatif)"])},
  "postalCode": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Code postal"])},
  "town": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ville"])},
  "region": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Région"])},
  "general_conditions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions générales"])},
  "privacy": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Politique de confidentialité"])},
  "term_of_use": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions d'utilisation"])},
  "imprint": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mentions légales"])},
  "enter_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre adresse de résidence"])},
  "registration_done": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Terminé"])},
  "verify_phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre numéro de téléphone portable"])},
  "verify_email": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre adresse e-mail"])},
  "verify_email_infotext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Consultez votre boîte de réception et entrez ici le code que nous vous avons envoyé par e-mail :"])},
  "reset_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialiser votre mot de passe"])},
  "email_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez fournir une adresse e-mail"])},
  "new_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau mot de passe"])},
  "password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez fournir un nouveau mot de passe"])},
  "confirm_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre nouveau mot de passe"])},
  "confirm_password_is_required": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez confirmer votre nouveau mot de passe"])},
  "password_reset_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialisation du mot de passe réussie"])},
  "confirm": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer"])},
  "pin_reset_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialisation du code PIN réussie. Veuillez vous reconnecter à l'application pour définir un nouveau code PIN"])},
  "resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous réinitialisons votre code PIN. Veuillez patienter et ne pas quitter la page..."])},
  "error_resetting_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur lors de la réinitialisation de votre code PIN"])},
  "reset_pin": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialiser votre code PIN"])},
  "error_resetting_pin_no_token": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : jeton invalide"])},
  "depot_status_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Actif"])},
  "depot_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Annulé"])},
  "depot_status_paused": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["En pause"])},
  "depot_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Achevé"])},
  "depot_status_blocked": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bloqué"])},
  "depot_status_applied_for_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Appliqué"])},
  "depot_status_withdrawn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Retiré"])},
  "depot_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom"])},
  "status": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Statut"])},
  "amount_euro": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant en euros"])},
  "amount_gram": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Quantité en grammes"])},
  "details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détails"])},
  "Savingplan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Plan d'épargne"])},
  "Gold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])},
  "Silver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Argent"])},
  "cant_load_depot_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous n'arrivons pas à charger la liste des dépôts"])},
  "order_status_completed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["complétée"])},
  "order_status_pending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en attente"])},
  "order_status_paid": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["payée"])},
  "order_status_processing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en cours de traitement"])},
  "order_status_payment_failed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["échouée"])},
  "order_status_canceled": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["annulée"])},
  "order_status_refunded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["remboursée"])},
  "order_status_payment_outstanding": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement en attente"])},
  "order_status_payment_inprogress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en attente"])},
  "order_status_reverted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])},
  "type": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])},
  "latest_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transactions récentes"])},
  "depots": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôts"])},
  "request_password_title": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe oublié?"])},
  "password_request_with_success": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous vous avons envoyé un lien pour réinitialiser votre mot de passe."])},
  "silver_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix argent"])},
  "gold_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix or"])},
  "gold_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix de gram d'or"])},
  "silver_gram_price": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix de gram d'argent "])},
  "month": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mois"])},
  "max": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])},
  "year": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Année"])},
  "depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépot"])},
  "see_more": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Plus d'infos"])},
  "date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date"])},
  "course": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Taux"])},
  "purchase_amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'achat"])},
  "agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais d'inscription"])},
  "goldAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'actif"])},
  "amount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant"])},
  "bank_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Virement bancaire"])},
  "bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Compte bancaire"])},
  "payment_method": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])},
  "cant_load_orders_list": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous ne parvenons pas à charger la liste des commandes"])},
  "depot_detail": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])},
  "dashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tableau de bord"])},
  "min": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])},
  "depot_value": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Valeur du dépôt"])},
  "performance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])},
  "orders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])},
  "from": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["From"])},
  "contract_term": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])},
  "interval_day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Interval day"])},
  "whyInvestInGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pourquoi investir dans l'or ?"])},
  "whyInvestInSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pourquoi investir dans l'argent ?"])},
  "advantagesOfGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les avantages de l'or"])},
  "advantagesOfSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les avantages de l'argent"])},
  "crisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Investissement résistant aux crises"])},
  "inflationProof": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A l'abri de l'inflation"])},
  "optimalWealthAccumulation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Idéal pour se constituer un patrimoine"])},
  "benefitsGoldGreenGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Éthique et durable dans l'extraction, le transport et le raffinage."])},
  "LBMAcertified": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Certifié LBMA"])},
  "noTva": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exonéré de TVA"])},
  "silverCrisisResistant": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Investissement résistant aux crises"])},
  "ondemandDelivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Possibilité de livraison sur demande"])},
  "securedStorageGermany": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stockage dans un coffre-fort haute sécurité en Allemagne"])},
  "industryDemanded": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Une forte demande industrielle"])},
  "storageInSwitzerland": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stockage en Suisse"])},
  "tvaExempted": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exonération de la TVA (19 %) par le biais du stockage dans l'entrepôt franc de douane en Suisse."])},
  "choose_purpose": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le but du dépôt"])},
  "set_the_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom de dépôt"])},
  "savings_plan_contract": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Définir le contrat de plan d'épargne"])},
  "savings_plan_summary": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer le contrat de plan d'épargne"])},
  "new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un nouveau depôt"])},
  "new_gold_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau depôt d'or"])},
  "new_silver_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau depôt d'argent"])},
  "start": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])},
  "reasonForDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pour quoi souhaitez-vous épargner ?"])},
  "set": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])},
  "createYourPlanInSomeMinutes": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez votre plan d'épargne en quelques minutes"])},
  "createGoldSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pour un avenir plus sûr."])},
  "createGoldSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez une fortune avec un plan d'épargne à partir de 50 euros par mois."])},
  "createSilverSavingsplanInfoText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez une fortune avec un plan d'épargne à partir de 50 euros par mois."])},
  "createSilverSavingsplanHeadline": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pour un avenir plus sûr."])},
  "createDepotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez confirmer les conditions ci-dessous pour créer votre dépôt. Il n’y a aucun coût pour créer le dépôt. Les frais de stockage ne seront appliqués qu’une fois que vous aurez créé votre première transaction."])},
  "createDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer le dépôt"])},
  "depotCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre dépôt a été créé avec succès"])},
  "setupSavingPlanNow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un plan d'épargne"])},
  "errorOccured": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Une erreur s'est produite."])},
  "tryAgain": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez essayer à nouveau."])},
  "calculateTrustData": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paramètres du contrat"])},
  "projectedPerformance": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prévisions de performance"])},
  "fiftyOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75 % pour les frais et 25 % pour l'achat d'or jusqu'à ce que vos frais d'inscription soient remboursé."])},
  "fiftyOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75 % pour les frais et 25 % pour l'achat d'argent jusqu'à ce que vos frais d'inscription soient remboursé."])},
  "oneOptionExplanationGold": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["100 % de votre épargne est affectée à l'achat d'or dès le début, et vous bénéficiez d'une remise de 10 %."])},
  "oneOptionExplanationSilver": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["100 % de votre épargne est affectée à l'achat d'argent dès le début, et vous bénéficiez d'une remise de 10 %."])},
  "seeReamboursmentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afficher le tableau des paiements"])},
  "startnewKyc": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lancez un nouveau processus"])},
  "startAutoIdtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de terminer le contrôle d'identité, vous devez lancer l'identification automatique soit dans l'application, soit par un lien (gardez votre carte d'identité près de vous)."])},
  "continueAutIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de terminer la vérification de votre identité, vous devez continuer l'identification automatique soit dans l'application, soit par lien (veuillez garder votre carte d'identité près de vous)."])},
  "failedAutoIdText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre identification automatique a échoué, veuillez lancer une nouvelle procédure de vérification d'identité."])},
  "continueAutoId": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Continuez l'identification"])},
  "accountHolder": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Titulaire du compte"])},
  "iban": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])},
  "setAsDefault": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Compte par défaut"])},
  "authorizeInaiaToAcceptPayment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J'autorise l'INAIA GmbH à effectuer des paiements sur mon compte par prélèvement automatique. En même temps, je donne l'ordre à ma banque d'encaisser les prélèvements effectués sur mon compte par l'INAIA GmbH."])},
  "kycStatusIsPending": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous allons maintenant vérifier votre pièce d’identité. Ce processus devrait être terminé dans les 24 heures."])},
  "kycStatusIsFailed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Malheureusement, le processus de vérification a échoué. Veuillez recommencer le processus et assurez-vous que les informations fournies correspondent à celles de votre pièce d’identité."])},
  "downloadPDF": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Télécharger le PDF"])},
  "startDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de début"])},
  "endDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de fin"])},
  "write_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Écrivez une réponse..."])},
  "send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Envoyer un message"])},
  "select_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle ein Ticket um Nachrichten einzusehen."])},
  "new": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau"])},
  "closed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fermé"])},
  "open": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ouvert"])},
  "has_new_answer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Répondu"])},
  "has_new_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau message"])},
  "support_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tickets de support"])},
  "subject": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sujet"])},
  "creation_date": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de création"])},
  "loading_ticket_details": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Chargement des détails du ticket de support"])},
  "send": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Envoyer"])},
  "cancel": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Annulé"])},
  "create": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créé"])},
  "create_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créé ticket"])},
  "new_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau ticket"])},
  "close_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en fermant ce ticket vous ne pourrez plus continuer cette conversation"])},
  "close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ticket schließen"])},
  "today": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Heute"])},
  "cant_send_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])},
  "ticket_closed_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])},
  "ticket_opened_successfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])},
  "ticket_closed_unsuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])},
  "are_you_sure_you_want_to_close_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])},
  "are_you_sure_you_want_to_open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])},
  "open_ticket_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])},
  "message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Message"])},
  "client": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Cliente"])},
  "write_message": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Écrivez message ..."])},
  "ok": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])},
  "ticketCreatedSuccessfully": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre ticket a été créé avec succès"])},
  "open_ticket": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])},
  "old_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ancien mot de passe"])},
  "update_password": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mettre à jour le mot de passe"])},
  "password_confirmation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer le mot de passe"])},
  "password_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe mis à jour"])},
  "password_update_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Après avoir changé votre mot de passe, vous serez déconnecté(e). Veuillez vous reconnecter avec votre nouveau mot de passe pour continuer."])},
  "password_mismatch_alert": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les mots de passe que vous avez saisis ne correspondent pas."])},
  "depot_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avatar du dépôt mis à jour"])},
  "profile_avatar_updated": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avatar du profil mis à jour"])},
  "minimumAmountRequired": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Un montant minimum d'achat de 25 ", _interpolate(_named("currency")), " est requis"])},
  "showPreview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aperçu"])},
  "depotText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôt"])},
  "buyingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les achats effectués dans le cadre d'une transaction pour le compte de tiers (Transaction Wakalah) sont exécutés sans délai, dès que possible et au plus tard dans les deux jours ouvrables suivant la réception des fonds."])},
  "purshaseSellNote": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remarque : l'aperçu donné ici ne constitue pas une acceptation de commande contraignante. L'ordre d'achat ou de vente n'entre en vigueur que lorsque la confirmation de la commande est envoyée par courrier électronique.  Nos conditions générales de vente s'appliquent."])},
  "buygoldtooltip": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le taux indiqué n'est qu'une estimation approximative. Le taux réel le jour de l'exécution de votre ordre peut être différent"])},
  "your_profile": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile"])},
  "sign_out": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Déconnexion"])},
  "trading": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Marché"])},
  "select": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Select"])},
  "buy_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Achat d'actifs "])},
  "sell_assets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vente d'actifs "])},
  "asset_transfer": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transfert d'actifs"])},
  "minimumGoldSellRequired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Un minimum de 1 gramme est nécessaire pour pouvoir vendre"])},
  "youHaveLessThanOneGramSellAll": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous avez moins de 1g d'or dans ce dépôt, vous ne pouvez vendre que la totalité de votre or."])},
  "deliverGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La valeur donnée ne doit pas dépasser la quantité de grammes disponibles et doit être d'au moins 20 g."])},
  "orderOverview": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détails de la commande"])},
  "execution": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exécution"])},
  "paymentMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])},
  "transaction_fee": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commission de transaction"])},
  "totalAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant total"])},
  "asSoonAsPossible": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dès que possible*"])},
  "confirmwithmobiletext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant votre code PIN mobile à l'aide de l'application installée sur votre appareil."])},
  "confirmwithemailtext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui vous a été envoyé par e-mail."])},
  "confirmwithsmstext": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui a été envoyé à votre numéro de téléphone par sms."])},
  "donthaveaccesstoconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas accès à votre"])},
  "changeconfirmationmethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Modifier la méthode de confirmation"])},
  "confirmationMethod": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Méthode de confirmation"])},
  "orderexpired": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation de commande expirée"])},
  "sellGoldWarningText": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le montant ne doit pas dépasser la quantité d'or disponible"])},
  "availableAmountNonZero": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ce dépôt n'a pas d'actif, vous ne pouvez rien vendre."])},
  "blockedAmountdetails": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détail des montants bloqués"])},
  "blockedAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant bloqué"])},
  "tradeableAmount": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant disponible"])},
  "pendingOrders": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commandes en pause"])},
  "blockedAmountExplanation": (ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Le montant de ", _interpolate(_named("blockedAmount")), " grammes n'est actuellement pas disponible. Cela peut être dû à des délais d'annulation, à la procédure de prélèvement SEPA ou à des frais d'abonnement impayés. Dès que les délais de sécurité sont écoulés, la quantité correspondante est libérée pour la vente."])},
  "tomorrow": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["demain"])},
  "availableIn": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Disponible en"])},
  "To": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["à"])},
  "available": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["disponible"])},
  "sellingNoteOnExecutionDate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les ordres de vente sont toujours exécutés par INAIA dès que possible, mais au plus tard dans les 7 jours ouvrables."])},
  "TakingIntoAccountTheValidWorkingHours": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["En fonction des heures de trading."])},
  "deliveryAddress": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse de livraison"])},
  "shippingCost": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais de livraison"])},
  "delivery": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Livraison"])},
  "receiverDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Récepteur"])},
  "orderconfirmed": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commande confirmée"])},
  "backToDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["retour au dépôt"])},
  "welcome": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bienvenue"])},
  "orderdeclined": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La commande a été rejetée"])},
  "full_name": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])},
  "email_address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])},
  "phone": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de portable"])},
  "address": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Addresse"])},
  "update": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Modifier"])},
  "delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Supprimer"])},
  "mark_default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Marquer comme par défaut"])},
  "add_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ajouter un compte bancaire"])},
  "language": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Langue"])},
  "bank_accounts": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vos comptes bancaires"])},
  "default": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Par défaut"])},
  "de": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Allemand"])},
  "en": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anglais"])},
  "fr": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Français"])},
  "confirm_delete": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer la suppression"])},
  "do_you_want_to_delete_bank_account": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Êtes-vous sûr de vouloir supprimer ce compte bancaire ?"])},
  "showing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Affichant"])},
  "sell": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vente"])},
  "results": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["résultats"])},
  "of": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["de"])},
  "no_savings_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aucun plan d'épargne"])},
  "saving_plan_not_active": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aucun plan d'épargne n'est établi"])},
  "add_saving_plan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un plan d'épargne"])},
  "monthlysavingrate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versement mensuel"])},
  "duration": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La durée"])},
  "years": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["années"])},
  "startdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de début du contrat"])},
  "savings": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'épargne"])},
  "returns": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Rendements"])},
  "day": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jour"])},
  "billing": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Facturation"])},
  "payment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])},
  "deposit": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôt"])},
  "total_agio": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais d'inscription"])},
  "savings_rate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'épargne"])},
  "accept": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Accepter"])},
  "installment": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versement"])},
  "paymentPlan": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tableau des paiements"])},
  "creatingdepotpleasewait": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Création du dépôt, veuillez patienter..."])},
  "goToDashboard": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aller au tableau de bord"])},
  "chooseSenderDepot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez le dépôt à partir duquel vous souhaitez effectuer l'envoi"])},
  "please_verify_account_to_create_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez terminer votre vérification d'identité afin de pouvoir commencer à créer des dépôts."])},
  "create_new_depot": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez actuellement aucun dépôt, veuillez créer un nouveau dépôt d'argent ou d'or pour commencer."])},
  "you_have_no_transactions": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez aucune transaction"])},
  "personalInformation": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Données personnelles"])},
  "gender": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sexe"])},
  "birthdate": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de naissance"])},
  "nationality": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nationalité"])},
  "birthplace": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lieu de naissance"])},
  "go_to_login": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Connectez-vous ici"])},
  "you_have_no_message_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n’avez actuellement aucun message dans votre boîte de réception."])},
  "you_have_no_support_ticket_yet": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas encore de ticket de support."])},
  "inboxMessages": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Boîte de réception"])},
  "supportTickets": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tickets de support"])},
  "inaiaSupport": (ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Service client INAIA"])}
},}),})
  nuxtI18nOptions.vueI18n = await vueI18nOptionsLoader(context)
  nuxtI18nOptions.locales = [Object({"name":"Deutsch","code":"de","iso":"de-DE","file":"de/de","img":"/assets/img/flags/germany-48.png","path":undefined}),Object({"name":"English","code":"en","iso":"en-GB","file":"en/en","img":"/assets/img/flags/great-britain-48.png","path":undefined}),Object({"name":"Français","code":"fr","iso":"fr-FR","file":"fr/fr","img":"/assets/img/flags/france-48.png","path":undefined})]
  nuxtI18nOptions.defaultLocale = "en"
  nuxtI18nOptions.defaultDirection = "ltr"
  nuxtI18nOptions.routesNameSeparator = "___"
  nuxtI18nOptions.trailingSlash = false
  nuxtI18nOptions.defaultLocaleRouteNameSuffix = "default"
  nuxtI18nOptions.strategy = "prefix"
  nuxtI18nOptions.lazy = true
  nuxtI18nOptions.langDir = "lang/"
  nuxtI18nOptions.rootRedirect = null
  nuxtI18nOptions.detectBrowserLanguage = Object({"alwaysRedirect":false,"cookieCrossOrigin":false,"cookieDomain":null,"cookieKey":"i18n_redirected","cookieSecure":false,"fallbackLocale":"","redirectOn":"root","useCookie":true})
  nuxtI18nOptions.differentDomains = false
  nuxtI18nOptions.baseUrl = ""
  nuxtI18nOptions.dynamicRouteParams = false
  nuxtI18nOptions.customRoutes = "page"
  nuxtI18nOptions.pages = Object({})
  nuxtI18nOptions.skipSettingLocaleOnNavigate = false
  nuxtI18nOptions.onBeforeLanguageSwitch = (() => "")
  nuxtI18nOptions.onLanguageSwitched = (() => null)
  nuxtI18nOptions.types = undefined
  nuxtI18nOptions.debug = false
  return nuxtI18nOptions
}

export const nuxtI18nOptionsDefault = Object({vueI18n: undefined,locales: [],defaultLocale: "",defaultDirection: "ltr",routesNameSeparator: "___",trailingSlash: false,defaultLocaleRouteNameSuffix: "default",strategy: "prefix_except_default",lazy: false,langDir: null,rootRedirect: null,detectBrowserLanguage: Object({"alwaysRedirect":false,"cookieCrossOrigin":false,"cookieDomain":null,"cookieKey":"i18n_redirected","cookieSecure":false,"fallbackLocale":"","redirectOn":"root","useCookie":true}),differentDomains: false,baseUrl: "",dynamicRouteParams: false,customRoutes: "page",pages: Object({}),skipSettingLocaleOnNavigate: false,onBeforeLanguageSwitch: (() => ""),onLanguageSwitched: (() => null),types: undefined,debug: false})

export const nuxtI18nInternalOptions = Object({__normalizedLocales: [Object({"name":"Deutsch","code":"de","iso":"de-DE","file":"de/de","img":"/assets/img/flags/germany-48.png","path":undefined}),Object({"name":"English","code":"en","iso":"en-GB","file":"en/en","img":"/assets/img/flags/great-britain-48.png","path":undefined}),Object({"name":"Français","code":"fr","iso":"fr-FR","file":"fr/fr","img":"/assets/img/flags/france-48.png","path":undefined})]})
export const NUXT_I18N_MODULE_ID = "@nuxtjs/i18n"
export const isSSG = false
export const isSSR = true
