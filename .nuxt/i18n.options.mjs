export const localeCodes = ["de","en","fr"]

export const localeMessages = {
  "de": [],
  "en": [],
  "fr": [],
}

export const additionalMessages = Object({"de":[],"en":[],"fr":[],})

export const resolveNuxtI18nOptions = async (context) => {
  const nuxtI18nOptions = Object({})
  const vueI18nOptionsLoader = async (context) => Object({"fallbackLocale":"en","legacy":false,"locale":"en","messages": Object({"de":{
  "1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Januar"])};fn.source="Januar";return fn;})(),
  "2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Februar"])};fn.source="Februar";return fn;})(),
  "3": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["März"])};fn.source="März";return fn;})(),
  "4": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["April"])};fn.source="April";return fn;})(),
  "5": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mai"])};fn.source="Mai";return fn;})(),
  "6": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juni"])};fn.source="Juni";return fn;})(),
  "7": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juli"])};fn.source="Juli";return fn;})(),
  "8": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["August"])};fn.source="August";return fn;})(),
  "9": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["September"])};fn.source="September";return fn;})(),
  "10": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Oktober"])};fn.source="Oktober";return fn;})(),
  "11": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["November"])};fn.source="November";return fn;})(),
  "12": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dezember"])};fn.source="Dezember";return fn;})(),
  "15": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The fifteenth"])};fn.source="The fifteenth";return fn;})(),
  "createAccount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account erstellen"])};fn.source="Account erstellen";return fn;})(),
  "plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle einen Plan aus"])};fn.source="Wähle einen Plan aus";return fn;})(),
  "subscription_info": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Persönliche Daten"])};fn.source="Persönliche Daten";return fn;})(),
  "conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geschäftsbedingungen"])};fn.source="Geschäftsbedingungen";return fn;})(),
  "accept_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir möchten dich per E-Mail oder auf anderem Wege über Produktupdates und weitere Dienste von INAIA auf dem Laufenden halten. Setze das Häkchen und gib uns deine Zustimmung."])};fn.source="Wir möchten dich per E-Mail oder auf anderem Wege über Produktupdates und weitere Dienste von INAIA auf dem Laufenden halten. Setze das Häkchen und gib uns deine Zustimmung.";return fn;})(),
  "step": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Schritt"])};fn.source="Schritt";return fn;})(),
  "email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail"])};fn.source="E-Mail";return fn;})(),
  "password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort"])};fn.source="Passwort";return fn;})(),
  "password_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Das Passwort muss min. aus 8 Zeichen bestehen und Sonderzeichen enthalten."])};fn.source="Das Passwort muss min. aus 8 Zeichen bestehen und Sonderzeichen enthalten.";return fn;})(),
  "name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorname"])};fn.source="Vorname";return fn;})(),
  "surname": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "referal_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Empfehlungscode (optional)"])};fn.source="Empfehlungscode (optional)";return fn;})(),
  "your_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle das Land, in dem du behördlich gemeldet bist"])};fn.source="Wähle das Land, in dem du behördlich gemeldet bist";return fn;})(),
  "loading_country_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Länder konnten nicht geladen werden."])};fn.source="Fehler: Länder konnten nicht geladen werden.";return fn;})(),
  "features": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Features"])};fn.source="Features";return fn;})(),
  "monthly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["monatlich"])};fn.source="monatlich";return fn;})(),
  "year": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jahr"])};fn.source="Jahr";return fn;})(),
  "buy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jetzt kaufen"])};fn.source="Jetzt kaufen";return fn;})(),
  "choose_your_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle einen Plan aus"])};fn.source="Wähle einen Plan aus";return fn;})(),
  "monthly_billing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monthly billing"])};fn.source="Monthly billing";return fn;})(),
  "yearly_billing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Yearly billing"])};fn.source="Yearly billing";return fn;})(),
  "please_choose_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please choose your plan"])};fn.source="Please choose your plan";return fn;})(),
  "no_plans_for_selected_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Leider können wir aktuell noch keine Produkte in dem von dir gewählten Land anbieten."])};fn.source="Leider können wir aktuell noch keine Produkte in dem von dir gewählten Land anbieten.";return fn;})(),
  "plan_loading_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Pläne konnten nicht geladen werden."])};fn.source="Fehler: Pläne konnten nicht geladen werden.";return fn;})(),
  "plan_pricing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Preise"])};fn.source="Preise";return fn;})(),
  "register": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account-Registrierung - INAIA"])};fn.source="Account-Registrierung - INAIA";return fn;})(),
  "download_document": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dokument herunterladen"])};fn.source="Dokument herunterladen";return fn;})(),
  "server_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unbekannter Fehler: Verusche es später noch einmal."])};fn.source="Unbekannter Fehler: Verusche es später noch einmal.";return fn;})(),
  "error_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler"])};fn.source="Fehler";return fn;})(),
  "phone_number": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer"])};fn.source="Mobilnummer";return fn;})(),
  "save": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Speichern"])};fn.source="Speichern";return fn;})(),
  "account_info_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Daten konnten nicht gespeichert werden."])};fn.source="Fehler: Daten konnten nicht gespeichert werden.";return fn;})(),
  "registration_success_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Account wurde erfolgreich erstellt."])};fn.source="Dein Account wurde erfolgreich erstellt.";return fn;})(),
  "verify_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail Adresse bestätigen"])};fn.source="E-Mail Adresse bestätigen";return fn;})(),
  "verify_phone_number": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verify your phone number"])};fn.source="Verify your phone number";return fn;})(),
  "resend_email_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Keine E-Mail erhalten? Erneut senden"])};fn.source="Keine E-Mail erhalten? Erneut senden";return fn;})(),
  "resend_phone_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Keine SMS erhalten? Erneut senden"])};fn.source="Keine SMS erhalten? Erneut senden";return fn;})(),
  "email_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail erfolgreich bestätigt"])};fn.source="E-Mail erfolgreich bestätigt";return fn;})(),
  "phone_number_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer erfolgreich bestätigt."])};fn.source="Mobilnummer erfolgreich bestätigt.";return fn;})(),
  "next": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Weiter"])};fn.source="Weiter";return fn;})(),
  "signin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anmelden"])};fn.source="Anmelden";return fn;})(),
  "or": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])};fn.source="Or";return fn;})(),
  "emailAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-Mail Addresse"])};fn.source="E-Mail Addresse";return fn;})(),
  "rememberMe": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remember me"])};fn.source="Remember me";return fn;})(),
  "forGotPassword": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgot your password?"])};fn.source="Forgot your password?";return fn;})(),
  "signIn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])};fn.source="Sign in";return fn;})(),
  "check_creds": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Login fehlgeschlagen. \nDie Zugangsdaten sind nicht korrekt."])};fn.source="Login fehlgeschlagen. \nDie Zugangsdaten sind nicht korrekt.";return fn;})(),
  "gold_purchase": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldkauf"])};fn.source="Goldkauf";return fn;})(),
  "gold_sale": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldverkauf"])};fn.source="Goldverkauf";return fn;})(),
  "gold_sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldverkauf"])};fn.source="Goldverkauf";return fn;})(),
  "gold_withdrawal": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Entnahme"])};fn.source="Entnahme";return fn;})(),
  "gold_delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auslieferung"])};fn.source="Auslieferung";return fn;})(),
  "gold_gift": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gutschrift"])};fn.source="Gutschrift";return fn;})(),
  "gold_purchase_interval": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldkauf - Sparplan"])};fn.source="Goldkauf - Sparplan";return fn;})(),
  "gold_transfer_in": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldtransfer in"])};fn.source="Goldtransfer in";return fn;})(),
  "gold_transfer_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldtransfer out"])};fn.source="Goldtransfer out";return fn;})(),
  "PAYMENT_IN": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungseingang"])};fn.source="Zahlungseingang";return fn;})(),
  "PAYMENT_OUT": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["SEPA-Überweisung"])};fn.source="SEPA-Überweisung";return fn;})(),
  "FUND_TRANSFER": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geldtransfer"])};fn.source="Geldtransfer";return fn;})(),
  "WITHDRAWAL": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bargeldbezug"])};fn.source="Bargeldbezug";return fn;})(),
  "REDEMPTION": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Karteneinsatz"])};fn.source="Karteneinsatz";return fn;})(),
  "gold_refund": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung Goldkauf"])};fn.source="Erstattung Goldkauf";return fn;})(),
  "silver_delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silber-Auslieferung"])};fn.source="Silber-Auslieferung";return fn;})(),
  "silver_sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberverkauf"])};fn.source="Silberverkauf";return fn;})(),
  "silver_purchase": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberkauf"])};fn.source="Silberkauf";return fn;})(),
  "silver_withdrawal": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Entnahme"])};fn.source="Entnahme";return fn;})(),
  "silver_gift": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gutschrift"])};fn.source="Gutschrift";return fn;})(),
  "silver_purchase_interval": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberkauf - Sparplan"])};fn.source="Silberkauf - Sparplan";return fn;})(),
  "silver_transfer_in": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silbertransfer in"])};fn.source="Silbertransfer in";return fn;})(),
  "silver_transfer_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silbertransfer out"])};fn.source="Silbertransfer out";return fn;})(),
  "silver_refund": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung Silberkauf"])};fn.source="Erstattung Silberkauf";return fn;})(),
  "yearly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["jährlich"])};fn.source="jährlich";return fn;})(),
  "phone_number_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gebe den 4-stelligen Verifizierungscode ein, den wir dir gesendet haben an"])};fn.source="Gebe den 4-stelligen Verifizierungscode ein, den wir dir gesendet haben an";return fn;})(),
  "choose_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle das Land, in dem du behördlich gemeldet bist"])};fn.source="Wähle das Land, in dem du behördlich gemeldet bist";return fn;})(),
  "line1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Straße Hausnummer"])};fn.source="Straße Hausnummer";return fn;})(),
  "line2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresszusatz (optional)"])};fn.source="Adresszusatz (optional)";return fn;})(),
  "postalCode": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Postleitzahl"])};fn.source="Postleitzahl";return fn;})(),
  "town": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stadt"])};fn.source="Stadt";return fn;})(),
  "region": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bundesland/Region"])};fn.source="Bundesland/Region";return fn;})(),
  "general_conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Allgemeine Geschäftsbedingungen (AGB)"])};fn.source="Allgemeine Geschäftsbedingungen (AGB)";return fn;})(),
  "privacy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Datenschutzerklärung"])};fn.source="Datenschutzerklärung";return fn;})(),
  "term_of_use": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nutzungsbedingungen"])};fn.source="Nutzungsbedingungen";return fn;})(),
  "imprint": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Impressum"])};fn.source="Impressum";return fn;})(),
  "enter_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wohnungsanschrift"])};fn.source="Wohnungsanschrift";return fn;})(),
  "registration_done": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fertig"])};fn.source="Fertig";return fn;})(),
  "verify_phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mobilnummer bestätigen"])};fn.source="Mobilnummer bestätigen";return fn;})(),
  "verify_email_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Überprüfe deine Inbox und trage hier den Code ein, den wir die per E-Mail zugeschickt haben:"])};fn.source="Überprüfe deine Inbox und trage hier den Code ein, den wir die per E-Mail zugeschickt haben:";return fn;})(),
  "reset_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort zurücksetzen"])};fn.source="Passwort zurücksetzen";return fn;})(),
  "email_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte geben Sie eine E-Mail-Adresse an"])};fn.source="Bitte geben Sie eine E-Mail-Adresse an";return fn;})(),
  "new_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neues Passwort"])};fn.source="Neues Passwort";return fn;})(),
  "password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte gebe ein neues Passwort ein"])};fn.source="Bitte gebe ein neues Passwort ein";return fn;})(),
  "confirm_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort bestätigen"])};fn.source="Passwort bestätigen";return fn;})(),
  "confirm_password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte bestätige dein neues Passwort"])};fn.source="Bitte bestätige dein neues Passwort";return fn;})(),
  "password_reset_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort erfolgreich zurückgesetzt"])};fn.source="Passwort erfolgreich zurückgesetzt";return fn;})(),
  "confirm": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bestätigen"])};fn.source="Bestätigen";return fn;})(),
  "pin_reset_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PIN erfolgreich zurückgesetzt. Bitte melde dich erneut in der App an, um eine neue PIN festzulegen"])};fn.source="PIN erfolgreich zurückgesetzt. Bitte melde dich erneut in der App an, um eine neue PIN festzulegen";return fn;})(),
  "resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir setzen deine PIN zurück. Bitte warte eien Moment und verlasse diese Seite nicht..."])};fn.source="Wir setzen deine PIN zurück. Bitte warte eien Moment und verlasse diese Seite nicht...";return fn;})(),
  "error_resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler beim Zurücksetzen deiner PIN"])};fn.source="Fehler beim Zurücksetzen deiner PIN";return fn;})(),
  "reset_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PIN zurücksetzen"])};fn.source="PIN zurücksetzen";return fn;})(),
  "error_resetting_pin_no_token": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fehler: Ungültiger Token"])};fn.source="Fehler: Ungültiger Token";return fn;})(),
  "depot_status_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aktiv"])};fn.source="Aktiv";return fn;})(),
  "depot_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abgesagt"])};fn.source="Abgesagt";return fn;})(),
  "depot_status_paused": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paused"])};fn.source="Paused";return fn;})(),
  "depot_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Completed"])};fn.source="Completed";return fn;})(),
  "depot_status_blocked": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Blocked"])};fn.source="Blocked";return fn;})(),
  "depot_status_applied_for_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Applied"])};fn.source="Applied";return fn;})(),
  "depot_status_withdrawn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawn"])};fn.source="Withdrawn";return fn;})(),
  "depot_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "status": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Status"])};fn.source="Status";return fn;})(),
  "amount_euro": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in euro"])};fn.source="Amount in euro";return fn;})(),
  "amount_gram": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in gram"])};fn.source="Amount in gram";return fn;})(),
  "details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Details"])};fn.source="Details";return fn;})(),
  "Savingplan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan"])};fn.source="Sparplan";return fn;})(),
  "Gold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold"])};fn.source="Gold";return fn;})(),
  "Silver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silber"])};fn.source="Silber";return fn;})(),
  "cant_load_depot_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are enable to load the list of depots"])};fn.source="We are enable to load the list of depots";return fn;})(),
  "orderOverview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auftragsübersicht"])};fn.source="Auftragsübersicht";return fn;})(),
  "order_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausgeführt"])};fn.source="Ausgeführt";return fn;})(),
  "order_status_pending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])};fn.source="Ausstehend";return fn;})(),
  "order_status_paid": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungseingang"])};fn.source="Zahlungseingang";return fn;})(),
  "order_status_processing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In Bearbeitung"])};fn.source="In Bearbeitung";return fn;})(),
  "order_status_payment_failed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlung offen"])};fn.source="Zahlung offen";return fn;})(),
  "order_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Storniert"])};fn.source="Storniert";return fn;})(),
  "order_status_refunded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstattung"])};fn.source="Erstattung";return fn;})(),
  "order_status_payment_outstanding": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])};fn.source="Ausstehend";return fn;})(),
  "order_status_payment_inprogress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])};fn.source="Ausstehend";return fn;})(),
  "order_status_reverted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])};fn.source="Reverted";return fn;})(),
  "type": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])};fn.source="Type";return fn;})(),
  "latest_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Letzte Transaktionen"])};fn.source="Letzte Transaktionen";return fn;})(),
  "depots": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depots"])};fn.source="Depots";return fn;})(),
  "request_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort vergessen?"])};fn.source="Passwort vergessen?";return fn;})(),
  "password_request_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wir haben dir einen Link geschickt, mit dem du dein Passwort zurücksetzen kannst."])};fn.source="Wir haben dir einen Link geschickt, mit dem du dein Passwort zurücksetzen kannst.";return fn;})(),
  "silver_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberpreis"])};fn.source="Silberpreis";return fn;})(),
  "gold_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldpreis"])};fn.source="Goldpreis";return fn;})(),
  "gold_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Goldpreis in Gramm"])};fn.source="Goldpreis in Gramm";return fn;})(),
  "silver_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silberpreis in Gramm"])};fn.source="Silberpreis in Gramm";return fn;})(),
  "month": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monat"])};fn.source="Monat";return fn;})(),
  "max": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])};fn.source="Max";return fn;})(),
  "depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])};fn.source="Depot";return fn;})(),
  "see_more": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehr"])};fn.source="Mehr";return fn;})(),
  "date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Datum"])};fn.source="Datum";return fn;})(),
  "course": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kurs"])};fn.source="Kurs";return fn;})(),
  "purchase_amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kaufbetrag"])};fn.source="Kaufbetrag";return fn;})(),
  "agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abschlussentgelt"])};fn.source="Abschlussentgelt";return fn;})(),
  "gold_amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Menge"])};fn.source="Menge";return fn;})(),
  "amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Betrag"])};fn.source="Betrag";return fn;})(),
  "bank_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Überweisung"])};fn.source="Überweisung";return fn;})(),
  "bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankverbindung"])};fn.source="Bankverbindung";return fn;})(),
  "payment_method": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungsmethode"])};fn.source="Zahlungsmethode";return fn;})(),
  "cant_load_orders_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are not able to load the orders list"])};fn.source="We are not able to load the orders list";return fn;})(),
  "depot_detail": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])};fn.source="Depot details";return fn;})(),
  "dashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dashboard"])};fn.source="Dashboard";return fn;})(),
  "min": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])};fn.source="Min";return fn;})(),
  "depot_value": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot value"])};fn.source="Depot value";return fn;})(),
  "performance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])};fn.source="Performance";return fn;})(),
  "orders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])};fn.source="Orders";return fn;})(),
  "from": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["von"])};fn.source="von";return fn;})(),
  "contract_term": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])};fn.source="Contract term";return fn;})(),
  "interval_day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abbuchung zum"])};fn.source="Abbuchung zum";return fn;})(),
  "whyInvestInGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Warum in Gold anlegen?"])};fn.source="Warum in Gold anlegen?";return fn;})(),
  "whyInvestInSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Warum in Silber anlegen?"])};fn.source="Warum in Silber anlegen?";return fn;})(),
  "advantagesOfSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorteile von Silber"])};fn.source="Vorteile von Silber";return fn;})(),
  "crisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Krisenresistente Wertanlage in physisches Gold (999/1000)"])};fn.source="Krisenresistente Wertanlage in physisches Gold (999/1000)";return fn;})(),
  "inflationProof": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inflationssicher"])};fn.source="Inflationssicher";return fn;})(),
  "optimalWealthAccumulation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Optimaler Vermögensaufbau"])};fn.source="Optimaler Vermögensaufbau";return fn;})(),
  "benefitsGoldGreenGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Ethisch und nachhaltig bei Förderung, Transport und Raffination."])};fn.source="Green Gold: Ethisch und nachhaltig bei Förderung, Transport und Raffination.";return fn;})(),
  "LBMAcertified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["LBMA-zertifiziert"])};fn.source="LBMA-zertifiziert";return fn;})(),
  "noTva": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehrwertsteuerfrei (19 %)"])};fn.source="Mehrwertsteuerfrei (19 %)";return fn;})(),
  "silverCrisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Krisenresistente Wertanlage in physisches Silber"])};fn.source="Krisenresistente Wertanlage in physisches Silber";return fn;})(),
  "ondemandDelivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auf Wunsch Auslieferung möglich"])};fn.source="Auf Wunsch Auslieferung möglich";return fn;})(),
  "securedStorageGermany": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lagerung im Hochsicherheitstresor in Deutschland"])};fn.source="Lagerung im Hochsicherheitstresor in Deutschland";return fn;})(),
  "industryDemanded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Hohe industrielle Nachfrage"])};fn.source="Hohe industrielle Nachfrage";return fn;})(),
  "storageInSwitzerland": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lagerung im Zollfreilager in der Schweiz"])};fn.source="Lagerung im Zollfreilager in der Schweiz";return fn;})(),
  "tvaExempted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mehrwertsteuerfrei (19 %) durch Lagerung im Zollfreilager in der Schweiz"])};fn.source="Mehrwertsteuerfrei (19 %) durch Lagerung im Zollfreilager in der Schweiz";return fn;})(),
  "choose_purpose": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purose of the depot"])};fn.source="The purose of the depot";return fn;})(),
  "set_the_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name of the depot"])};fn.source="Name of the depot";return fn;})(),
  "savings_plan_contract": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set the saving plan contract"])};fn.source="Set the saving plan contract";return fn;})(),
  "savings_plan_summary": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm saving plan contract"])};fn.source="Confirm saving plan contract";return fn;})(),
  "new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New depot"])};fn.source="New depot";return fn;})(),
  "new_gold_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New gold depot"])};fn.source="New gold depot";return fn;})(),
  "new_silver_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New silver depot"])};fn.source="New silver depot";return fn;})(),
  "start": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])};fn.source="Start";return fn;})(),
  "reasonForDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wofür möchtest du sparen?"])};fn.source="Wofür möchtest du sparen?";return fn;})(),
  "set": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])};fn.source="Set";return fn;})(),
  "createYourPlanInSomeMinutes": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstelle deinen Sparplan\nin wenigen Minuten"])};fn.source="Erstelle deinen Sparplan\nin wenigen Minuten";return fn;})(),
  "createGoldSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monatlich ein Goldvermögen aufbauen"])};fn.source="Monatlich ein Goldvermögen aufbauen";return fn;})(),
  "createGoldSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit dem INAIA Gold Dinar Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Gold (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Gold ein und übernehmen die sichere Lagerung für dich."])};fn.source="Mit dem INAIA Gold Dinar Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Gold (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Gold ein und übernehmen die sichere Lagerung für dich.";return fn;})(),
  "createSilverSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monatlich ein Silbervermögen aufbauen"])};fn.source="Monatlich ein Silbervermögen aufbauen";return fn;})(),
  "createSilverSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit dem INAIA Silber Dirham Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Silber (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Silber ein und übernehmen die sichere Lagerung für dich."])};fn.source="Mit dem INAIA Silber Dirham Sparplan legst du dein Geld ohne Zinsen in reinstes physisches Silber (999/1000) an. Du setzt einen Betrag fest, den du monatlich investieren möchtest. Wir kaufen davon jeden Monat Silber ein und übernehmen die sichere Lagerung für dich.";return fn;})(),
  "createDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot anlegen"])};fn.source="Depot anlegen";return fn;})(),
  "depotCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Depot wurde erfolgreich angelegt"])};fn.source="Dein Depot wurde erfolgreich angelegt";return fn;})(),
  "createDepotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte bestätige die unten stehenden Sonderbedingungen, um dein Depot anzulegen. Es entstehen keine Kosten für die Erstellung des Depots. Lagerkosten fallen erst an, wenn du deine erste Transaktion erstellt hast."])};fn.source="Bitte bestätige die unten stehenden Sonderbedingungen, um dein Depot anzulegen. Es entstehen keine Kosten für die Erstellung des Depots. Lagerkosten fallen erst an, wenn du deine erste Transaktion erstellt hast.";return fn;})(),
  "setupSavingPlanNow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan einrichten"])};fn.source="Sparplan einrichten";return fn;})(),
  "errorOccured": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Es ist ein Fehler aufgetreten"])};fn.source="Es ist ein Fehler aufgetreten";return fn;})(),
  "tryAgain": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versuchen Sie es nochmal"])};fn.source="Versuchen Sie es nochmal";return fn;})(),
  "calculateTrustData": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vertragsdaten kalkulieren"])};fn.source="Vertragsdaten kalkulieren";return fn;})(),
  "projectedPerformance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prognostizierte Wertentwicklung"])};fn.source="Prognostizierte Wertentwicklung";return fn;})(),
  "agioPaymentOption1Title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75/25"])};fn.source="75/25";return fn;})(),
  "agioPaymentOption2Title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sofort bezahlen"])};fn.source="Sofort bezahlen";return fn;})(),
  "fiftyOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit 25 % des Sparbetrags kaufen wir für dich Gold ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist."])};fn.source="Mit 25 % des Sparbetrags kaufen wir für dich Gold ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist.";return fn;})(),
  "fiftyOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mit 25 % des Sparbetrags kaufen wir für dich Silber ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist."])};fn.source="Mit 25 % des Sparbetrags kaufen wir für dich Silber ein. Die anderen 75 % wenden wir für das vertraglich vereinbarte Abschlussentgelt auf bis dieses komplett getilgt ist.";return fn;})(),
  "oneOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Goldkauf."])};fn.source="Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Goldkauf.";return fn;})(),
  "oneOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Silberkauf."])};fn.source="Du bezahlst das vertraglich vereinbarte Abschlussentgelt sofort und sicherst dir einen Rabatt in Höhe von 10 %. Der gesamte Sparbetrag fließt von Beginn an in den Silberkauf.";return fn;})(),
  "seeReamboursmentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tilgungsplan anzeigen"])};fn.source="Tilgungsplan anzeigen";return fn;})(),
  "startnewKyc": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neuen Prozess starten"])};fn.source="Neuen Prozess starten";return fn;})(),
  "startAutoIdtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Um deine Identität zu bestätigen, führe bitte die automatische Identitätsprüfung durch. Halte dazu dein Ausweisdokument bereit."])};fn.source="Um deine Identität zu bestätigen, führe bitte die automatische Identitätsprüfung durch. Halte dazu dein Ausweisdokument bereit.";return fn;})(),
  "continueAutIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bitte schließe die automatische Identitätsprüfung ab, um deine Identität zu bestätigen. Halte dazu dein Ausweisdokument bereit."])};fn.source="Bitte schließe die automatische Identitätsprüfung ab, um deine Identität zu bestätigen. Halte dazu dein Ausweisdokument bereit.";return fn;})(),
  "failedAutoIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die automatische Identitätsprüfung ist fehlgeschlagen. Bitte starten den Prozess neu."])};fn.source="Die automatische Identitätsprüfung ist fehlgeschlagen. Bitte starten den Prozess neu.";return fn;})(),
  "continueAutoId": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Identitätsprüfung fortsetzen"])};fn.source="Identitätsprüfung fortsetzen";return fn;})(),
  "accountHolder": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Kontoinhaber"])};fn.source="Kontoinhaber";return fn;})(),
  "iban": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])};fn.source="IBAN";return fn;})(),
  "setAsDefault": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set as default"])};fn.source="Set as default";return fn;})(),
  "authorizeInaiaToAcceptPayment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ich ermächtige die INAIA GmbH, Zahlungen von meinem Konto mittels Lastschrift einzuziehen. Zugleich weise ich mein Kreditinstitut an, die von der INAIA GmbH auf mein Konto gezogenen Lastschriften einzulösen."])};fn.source="Ich ermächtige die INAIA GmbH, Zahlungen von meinem Konto mittels Lastschrift einzuziehen. Zugleich weise ich mein Kreditinstitut an, die von der INAIA GmbH auf mein Konto gezogenen Lastschriften einzulösen.";return fn;})(),
  "kycStatusIsPending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein Identitätsnachweis wird nun von uns geprüft. Dieser Prozess sollte innerhalb von 24 Stunden abgeschlossen sein."])};fn.source="Dein Identitätsnachweis wird nun von uns geprüft. Dieser Prozess sollte innerhalb von 24 Stunden abgeschlossen sein.";return fn;})(),
  "kycStatusIsFailed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der Verifizierungsprozess ist leider fehlgeschlagen. Bitte starte den Vorgang erneut und stelle sicher, dass die angegebenen Daten mit denen in deinem Ausweisdokument übereinstimmen."])};fn.source="Der Verifizierungsprozess ist leider fehlgeschlagen. Bitte starte den Vorgang erneut und stelle sicher, dass die angegebenen Daten mit denen in deinem Ausweisdokument übereinstimmen.";return fn;})(),
  "downloadPDF": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["PDF herunterladen"])};fn.source="PDF herunterladen";return fn;})(),
  "startDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Startdatum"])};fn.source="Startdatum";return fn;})(),
  "endDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enddatum"])};fn.source="Enddatum";return fn;})(),
  "write_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Antwort schreiben..."])};fn.source="Antwort schreiben...";return fn;})(),
  "send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nachricht senden"])};fn.source="Nachricht senden";return fn;})(),
  "select_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle ein Ticket um Nachrichten einzusehen."])};fn.source="Wähle ein Ticket um Nachrichten einzusehen.";return fn;})(),
  "new": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neu"])};fn.source="Neu";return fn;})(),
  "closed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geschlossen"])};fn.source="Geschlossen";return fn;})(),
  "open": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Offen"])};fn.source="Offen";return fn;})(),
  "has_new_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Beantwortet"])};fn.source="Beantwortet";return fn;})(),
  "has_new_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neue Nachricht"])};fn.source="Neue Nachricht";return fn;})(),
  "support_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support-Tickets"])};fn.source="Support-Tickets";return fn;})(),
  "subject": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Betreff"])};fn.source="Betreff";return fn;})(),
  "creation_date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellungsdatum"])};fn.source="Erstellungsdatum";return fn;})(),
  "loading_ticket_details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lade Support-Ticket-Details"])};fn.source="Lade Support-Ticket-Details";return fn;})(),
  "send": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["schicken"])};fn.source="schicken";return fn;})(),
  "create": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellt"])};fn.source="Erstellt";return fn;})(),
  "create_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erstellt ticket"])};fn.source="Erstellt ticket";return fn;})(),
  "new_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Neues ticket"])};fn.source="Neues ticket";return fn;})(),
  "close_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wenn Sie dieses Ticket schließen, können Sie dieses Gespräch nicht fortsetzen"])};fn.source="Wenn Sie dieses Ticket schließen, können Sie dieses Gespräch nicht fortsetzen";return fn;})(),
  "close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ticket schließen"])};fn.source="Ticket schließen";return fn;})(),
  "today": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Heute"])};fn.source="Heute";return fn;})(),
  "cant_send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])};fn.source="Enable to send your message due to an error";return fn;})(),
  "ticket_opened_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])};fn.source="The ticket was re-opened successfully";return fn;})(),
  "ticket_closed_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])};fn.source="This ticket was closed successfully";return fn;})(),
  "ticket_closed_unsuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])};fn.source="We couldn't close this ticket due to an error";return fn;})(),
  "are_you_sure_you_want_to_close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])};fn.source="Are you sure you want to close this ticket?";return fn;})(),
  "are_you_sure_you_want_to_open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])};fn.source="Are you sure you want to re-open this ticket?";return fn;})(),
  "open_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])};fn.source="To restart the conversation you can re-open the ticket";return fn;})(),
  "message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nachricht"])};fn.source="Nachricht";return fn;})(),
  "client": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Klientin"])};fn.source="Klientin";return fn;})(),
  "write_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Schreiben nachricht ..."])};fn.source="Schreiben nachricht ...";return fn;})(),
  "ok": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])};fn.source="Ok";return fn;})(),
  "ticketCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dein ticket wurde erfolgreich angelegt"])};fn.source="Dein ticket wurde erfolgreich angelegt";return fn;})(),
  "open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])};fn.source="Open ticket";return fn;})(),
  "old_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Altes Passwort"])};fn.source="Altes Passwort";return fn;})(),
  "update_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort aktualisieren"])};fn.source="Passwort aktualisieren";return fn;})(),
  "password_confirmation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort bestätigen"])};fn.source="Passwort bestätigen";return fn;})(),
  "password_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Passwort aktualisiert"])};fn.source="Passwort aktualisiert";return fn;})(),
  "password_update_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nach dem Ändern Ihres Passworts werden Sie abgemeldet. Bitte melden Sie sich erneut mit Ihrem neuen Passwort an, um fortzufahren."])};fn.source="Nach dem Ändern Ihres Passworts werden Sie abgemeldet. Bitte melden Sie sich erneut mit Ihrem neuen Passwort an, um fortzufahren.";return fn;})(),
  "password_mismatch_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die eingegebenen Passwörter stimmen nicht überein."])};fn.source="Die eingegebenen Passwörter stimmen nicht überein.";return fn;})(),
  "depot_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot-Avatar aktualisiert"])};fn.source="Depot-Avatar aktualisiert";return fn;})(),
  "profile_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profil-Avatar aktualisiert"])};fn.source="Profil-Avatar aktualisiert";return fn;})(),
  "minimumAmountRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Der Mindestbetrag beträgt 25 ", _interpolate(_named("currency"))])};fn.source="Der Mindestbetrag beträgt 25 {{currency}}";return fn;})(),
  "showPreview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vorschau anzeigen"])};fn.source="Vorschau anzeigen";return fn;})(),
  "depotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])};fn.source="Depot";return fn;})(),
  "purshaseSellNote": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Hinweis: Die hier aufgeführte Übersicht stellt keine verbindliche Auftragsannahme dar. Der Kauf- bzw. Verkaufsauftrag kommt erst mit Zusendung der Auftragsbestätigung per E-Mail zustande.\nEs gelten die Kauf- und Verkaufsintervalle in unseren Geschäftsbedingungen."])};fn.source="Hinweis: Die hier aufgeführte Übersicht stellt keine verbindliche Auftragsannahme dar. Der Kauf- bzw. Verkaufsauftrag kommt erst mit Zusendung der Auftragsbestätigung per E-Mail zustande.\nEs gelten die Kauf- und Verkaufsintervalle in unseren Geschäftsbedingungen.";return fn;})(),
  "buyingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Die Käufe im Fremdgeschäft (Wakalah-Transaktion) werden unverzüglich zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 2 Arbeitstagen nach Geldeingang ausgeführt."])};fn.source="Die Käufe im Fremdgeschäft (Wakalah-Transaktion) werden unverzüglich zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 2 Arbeitstagen nach Geldeingang ausgeführt.";return fn;})(),
  "buygoldtooltip": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der hier angezeigt Kurs dient lediglich der ungefähren Einschätzung. Der tatsächliche Kurs zum Tag der Ausführung deines Auftrags kann hiervon abweichen."])};fn.source="Der hier angezeigt Kurs dient lediglich der ungefähren Einschätzung. Der tatsächliche Kurs zum Tag der Ausführung deines Auftrags kann hiervon abweichen.";return fn;})(),
  "your_profile": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profil"])};fn.source="Profil";return fn;})(),
  "sign_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Logout"])};fn.source="Logout";return fn;})(),
  "trading": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Trading"])};fn.source="Trading";return fn;})(),
  "select": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auswählen"])};fn.source="Auswählen";return fn;})(),
  "buy_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets purshase"])};fn.source="Assets purshase";return fn;})(),
  "sell_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets sell"])};fn.source="Assets sell";return fn;})(),
  "asset_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets transfer"])};fn.source="Assets transfer";return fn;})(),
  "minimumGoldSellRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der Mindestbetrag beträgt 1 g"])};fn.source="Der Mindestbetrag beträgt 1 g";return fn;})(),
  "youHaveLessThanOneGramSellAll": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bei einem Goldbestand von weniger als 1 g kannst du nur den kompletten Restbestand verkaufen."])};fn.source="Bei einem Goldbestand von weniger als 1 g kannst du nur den kompletten Restbestand verkaufen.";return fn;})(),
  "deliverGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Der angegebene Wert darf die verfügbare Menge in Gramm nicht überschreiten und muss mindestens 20 g betragen"])};fn.source="Der angegebene Wert darf die verfügbare Menge in Gramm nicht überschreiten und muss mindestens 20 g betragen";return fn;})(),
  "execution": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausführung"])};fn.source="Ausführung";return fn;})(),
  "paymentMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Zahlungsmethode"])};fn.source="Zahlungsmethode";return fn;})(),
  "totalAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gesamtbetrag"])};fn.source="Gesamtbetrag";return fn;})(),
  "maxAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max. Betrag"])};fn.source="Max. Betrag";return fn;})(),
  "transaction_fee": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaktionsgebühr"])};fn.source="Transaktionsgebühr";return fn;})(),
  "asSoonAsPossible": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nächstmöglich*"])};fn.source="Nächstmöglich*";return fn;})(),
  "confirmwithmobiletext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using your mobile pin by using the app installed on your device"])};fn.source="In order to compelete your order please confirm it using your mobile pin by using the app installed on your device";return fn;})(),
  "confirmwithemailtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your email"])};fn.source="In order to compelete your order please confirm it using the code that was sent to your email";return fn;})(),
  "confirmwithsmstext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your phone number by sms"])};fn.source="In order to compelete your order please confirm it using the code that was sent to your phone number by sms";return fn;})(),
  "donthaveaccesstoconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You don't have access to"])};fn.source="You don't have access to";return fn;})(),
  "changeconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Change your confirmation method"])};fn.source="Change your confirmation method";return fn;})(),
  "confirmationMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation method"])};fn.source="Confirmation method";return fn;})(),
  "orderexpired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmation expired"])};fn.source="Order confirmation expired";return fn;})(),
  "sellGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Menge darf Goldbestand nicht übersteigen."])};fn.source="Menge darf Goldbestand nicht übersteigen.";return fn;})(),
  "availableAmountNonZero": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depotbestand ist leer. Verkauf nicht möglich."])};fn.source="Depotbestand ist leer. Verkauf nicht möglich.";return fn;})(),
  "blockedAmountdetails": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verfügbare Menge"])};fn.source="Verfügbare Menge";return fn;})(),
  "blockedAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ausstehend"])};fn.source="Ausstehend";return fn;})(),
  "tradeableAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verfügbar"])};fn.source="Verfügbar";return fn;})(),
  "pendingOrders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaktionen ausstehend"])};fn.source="Transaktionen ausstehend";return fn;})(),
  "blockedAmountExplanation": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Die Menge von ", _interpolate(_named("blockedAmount")), " Gramm ist derzeit nicht handelbar. Dies kann an Widerrufsfristen, am SEPA-Lastschriftverfahren oder einem noch offenen Abschlussentgelt liegen. Sobald Sicherheitsfristen vorüber sind, wird die entsprechende Menge zum Handel freigegeben."])};fn.source="Die Menge von {{blockedAmount}} Gramm ist derzeit nicht handelbar. Dies kann an Widerrufsfristen, am SEPA-Lastschriftverfahren oder einem noch offenen Abschlussentgelt liegen. Sobald Sicherheitsfristen vorüber sind, wird die entsprechende Menge zum Handel freigegeben.";return fn;})(),
  "tomorrow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["morgen"])};fn.source="morgen";return fn;})(),
  "availableIn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available in"])};fn.source="Available in";return fn;})(),
  "To": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bis"])};fn.source="Bis";return fn;})(),
  "available": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["verfügbar"])};fn.source="verfügbar";return fn;})(),
  "sellingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verkaufsaufträge werden durch INAIA immer zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 7 Arbeitstagen ausgeführt."])};fn.source="Verkaufsaufträge werden durch INAIA immer zum nächstmöglichen Zeitpunkt, spätestens jedoch innerhalb von 7 Arbeitstagen ausgeführt.";return fn;})(),
  "TakingIntoAccountTheValidWorkingHours": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unter Berücksichtigung der gültigen Handelszeiten."])};fn.source="Unter Berücksichtigung der gültigen Handelszeiten.";return fn;})(),
  "deliveryAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lieferadresse"])};fn.source="Lieferadresse";return fn;})(),
  "shippingCost": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versandkosten"])};fn.source="Versandkosten";return fn;})(),
  "delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Auslieferung"])};fn.source="Auslieferung";return fn;})(),
  "receiverDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Senden an"])};fn.source="Senden an";return fn;})(),
  "orderconfirmed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmed"])};fn.source="Order confirmed";return fn;})(),
  "backToDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Back to depot"])};fn.source="Back to depot";return fn;})(),
  "welcome": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Willkommen"])};fn.source="Willkommen";return fn;})(),
  "orderdeclined": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The order has been declined"])};fn.source="The order has been declined";return fn;})(),
  "full_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "email_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])};fn.source="E-mail";return fn;})(),
  "phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Handynummer"])};fn.source="Handynummer";return fn;})(),
  "address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse"])};fn.source="Adresse";return fn;})(),
  "update": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aktualisieren"])};fn.source="Aktualisieren";return fn;})(),
  "delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Löschen"])};fn.source="Löschen";return fn;})(),
  "mark_default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Als Standard markieren"])};fn.source="Als Standard markieren";return fn;})(),
  "add_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankdaten hinzufügen"])};fn.source="Bankdaten hinzufügen";return fn;})(),
  "language": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sprache"])};fn.source="Sprache";return fn;})(),
  "bank_accounts": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bankverbindungen"])};fn.source="Bankverbindungen";return fn;})(),
  "default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Standard"])};fn.source="Standard";return fn;})(),
  "de": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Deutsch"])};fn.source="Deutsch";return fn;})(),
  "en": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Englisch"])};fn.source="Englisch";return fn;})(),
  "fr": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Französisch"])};fn.source="Französisch";return fn;})(),
  "cancel": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abbrechen"])};fn.source="Abbrechen";return fn;})(),
  "confirm_delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Löschung bestätigen"])};fn.source="Löschung bestätigen";return fn;})(),
  "do_you_want_to_delete_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sind Sie sicher, dass Sie dieses Bankkonto löschen wollen?"])};fn.source="Sind Sie sicher, dass Sie dieses Bankkonto löschen wollen?";return fn;})(),
  "showing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["mit"])};fn.source="mit";return fn;})(),
  "sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Verkaufen"])};fn.source="Verkaufen";return fn;})(),
  "results": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["resultate"])};fn.source="resultate";return fn;})(),
  "of": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["von"])};fn.source="von";return fn;})(),
  "no_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan"])};fn.source="No savings plan";return fn;})(),
  "saving_plan_not_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan is set"])};fn.source="No savings plan is set";return fn;})(),
  "add_saving_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparplan einrichten"])};fn.source="Sparplan einrichten";return fn;})(),
  "duration": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Duration"])};fn.source="Duration";return fn;})(),
  "years": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jahre"])};fn.source="Jahre";return fn;})(),
  "startdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vertragsbeginn"])};fn.source="Vertragsbeginn";return fn;})(),
  "savings": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparsumme"])};fn.source="Sparsumme";return fn;})(),
  "returns": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Returns"])};fn.source="Returns";return fn;})(),
  "day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tag"])};fn.source="Tag";return fn;})(),
  "billing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Billing"])};fn.source="Billing";return fn;})(),
  "payment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])};fn.source="Payment";return fn;})(),
  "deposit": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Einzahlung"])};fn.source="Einzahlung";return fn;})(),
  "total_agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Abschlussentgelt"])};fn.source="Abschlussentgelt";return fn;})(),
  "savings_rate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sparbetrag"])};fn.source="Sparbetrag";return fn;})(),
  "accept": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bestätigen"])};fn.source="Bestätigen";return fn;})(),
  "installment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Installment"])};fn.source="Installment";return fn;})(),
  "paymentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tilgungsplan"])};fn.source="Tilgungsplan";return fn;})(),
  "creatingdepotpleasewait": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creating depot, plase wait..."])};fn.source="Creating depot, plase wait...";return fn;})(),
  "goToDashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to dashbaord"])};fn.source="Go to dashbaord";return fn;})(),
  "chooseSenderDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose the depot you want to send from"])};fn.source="Choose the depot you want to send from";return fn;})(),
  "please_verify_account_to_create_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please finish your identity check in order to start creating depots"])};fn.source="Please finish your identity check in order to start creating depots";return fn;})(),
  "create_new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Currently you have no depots, please create new silver or gold depot to start."])};fn.source="Currently you have no depots, please create new silver or gold depot to start.";return fn;})(),
  "you_have_no_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no transactions"])};fn.source="You have no transactions";return fn;})(),
  "personalInformation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Persönliche Daten"])};fn.source="Persönliche Daten";return fn;})(),
  "gender": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anrede"])};fn.source="Anrede";return fn;})(),
  "birthdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geburtsdatum"])};fn.source="Geburtsdatum";return fn;})(),
  "nationality": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Staatsangehörigkeit"])};fn.source="Staatsangehörigkeit";return fn;})(),
  "birthplace": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Geburtsort"])};fn.source="Geburtsort";return fn;})(),
  "go_to_login": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to login"])};fn.source="Go to login";return fn;})(),
  "you_have_no_message_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sie haben noch keine Nachricht."])};fn.source="Sie haben noch keine Nachricht.";return fn;})(),
  "you_have_no_support_ticket_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sie haben noch kein Support-Ticket."])};fn.source="Sie haben noch kein Support-Ticket.";return fn;})()
},"en":{
  "1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["January"])};fn.source="January";return fn;})(),
  "2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["February"])};fn.source="February";return fn;})(),
  "3": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["March"])};fn.source="March";return fn;})(),
  "4": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["April"])};fn.source="April";return fn;})(),
  "5": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["May"])};fn.source="May";return fn;})(),
  "6": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["June"])};fn.source="June";return fn;})(),
  "7": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["July"])};fn.source="July";return fn;})(),
  "8": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["August"])};fn.source="August";return fn;})(),
  "9": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["September"])};fn.source="September";return fn;})(),
  "10": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["October"])};fn.source="October";return fn;})(),
  "11": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["November"])};fn.source="November";return fn;})(),
  "12": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["December"])};fn.source="December";return fn;})(),
  "15": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The fifteenth"])};fn.source="The fifteenth";return fn;})(),
  "createAccount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create your account"])};fn.source="Create your account";return fn;})(),
  "plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your plan"])};fn.source="Choose your plan";return fn;})(),
  "subscription_info": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Personal data"])};fn.source="Personal data";return fn;})(),
  "conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Approve our conditions"])};fn.source="Approve our conditions";return fn;})(),
  "accept_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We would like to keep you informed about product updates and other services from INAIA via email or other means. Check the box and give us your consent."])};fn.source="We would like to keep you informed about product updates and other services from INAIA via email or other means. Check the box and give us your consent.";return fn;})(),
  "step": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Step"])};fn.source="Step";return fn;})(),
  "email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email"])};fn.source="Email";return fn;})(),
  "password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password"])};fn.source="Password";return fn;})(),
  "password_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your password must be at least 8 character long and must contains special characters"])};fn.source="Your password must be at least 8 character long and must contains special characters";return fn;})(),
  "name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "surname": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Surname"])};fn.source="Surname";return fn;})(),
  "referal_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Referal code"])};fn.source="Referal code";return fn;})(),
  "your_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Country of your residence"])};fn.source="Country of your residence";return fn;})(),
  "loading_country_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Server error: We couldn't load country list."])};fn.source="Server error: We couldn't load country list.";return fn;})(),
  "features": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Features"])};fn.source="Features";return fn;})(),
  "monthly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["monthly"])};fn.source="monthly";return fn;})(),
  "yearly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["yearly"])};fn.source="yearly";return fn;})(),
  "buy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Buy"])};fn.source="Buy";return fn;})(),
  "choose_your_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your plan and start saving Gold today"])};fn.source="Choose your plan and start saving Gold today";return fn;})(),
  "no_plans_for_selected_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["There is no plans for the selected country, please choose another country"])};fn.source="There is no plans for the selected country, please choose another country";return fn;})(),
  "plan_loading_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't load plans, cause of server error"])};fn.source="We couldn't load plans, cause of server error";return fn;})(),
  "plan_pricing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pricing Plans"])};fn.source="Pricing Plans";return fn;})(),
  "register": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account Registration - INAIA"])};fn.source="Account Registration - INAIA";return fn;})(),
  "download_document": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Download document"])};fn.source="Download document";return fn;})(),
  "server_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["An error has occurred: server error on request."])};fn.source="An error has occurred: server error on request.";return fn;})(),
  "error_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Error"])};fn.source="Error";return fn;})(),
  "phone_number": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number"])};fn.source="Phone number";return fn;})(),
  "phone_number_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enter the 4-digit verification code we sent to you to"])};fn.source="Enter the 4-digit verification code we sent to you to";return fn;})(),
  "save": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Save"])};fn.source="Save";return fn;})(),
  "account_info_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't save the information please try again later"])};fn.source="We couldn't save the information please try again later";return fn;})(),
  "registration_success_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Thank you for your registration! Please download the INAIA App at Apple App Store or at Google Play."])};fn.source="Thank you for your registration! Please download the INAIA App at Apple App Store or at Google Play.";return fn;})(),
  "resend_email_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Resend email code"])};fn.source="Resend email code";return fn;})(),
  "resend_phone_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Resend phone number code"])};fn.source="Resend phone number code";return fn;})(),
  "email_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email verified"])};fn.source="Email verified";return fn;})(),
  "phone_number_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number verified"])};fn.source="Phone number verified";return fn;})(),
  "next": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Next"])};fn.source="Next";return fn;})(),
  "signin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])};fn.source="Sign in";return fn;})(),
  "or": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])};fn.source="Or";return fn;})(),
  "emailAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Email address"])};fn.source="Email address";return fn;})(),
  "rememberMe": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remember me"])};fn.source="Remember me";return fn;})(),
  "forGotPassword": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgot your password?"])};fn.source="Forgot your password?";return fn;})(),
  "signIn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sign in"])};fn.source="Sign in";return fn;})(),
  "check_creds": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Access denied. \nInvalid credentials."])};fn.source="Access denied. \nInvalid credentials.";return fn;})(),
  "gold_purchase": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold purchase"])};fn.source="Gold purchase";return fn;})(),
  "gold_sale": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold sell"])};fn.source="Gold sell";return fn;})(),
  "gold_sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold sell"])};fn.source="Gold sell";return fn;})(),
  "gold_withdrawal": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold withdrawal"])};fn.source="Gold withdrawal";return fn;})(),
  "gold_delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold delivery"])};fn.source="Gold delivery";return fn;})(),
  "gold_gift": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold gift"])};fn.source="Gold gift";return fn;})(),
  "gold_purchase_interval": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold Purchase - Recurring"])};fn.source="Gold Purchase - Recurring";return fn;})(),
  "gold_transfer_in": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold transfer in"])};fn.source="Gold transfer in";return fn;})(),
  "gold_transfer_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold transfer out"])};fn.source="Gold transfer out";return fn;})(),
  "PAYMENT_IN": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment in"])};fn.source="Payment in";return fn;})(),
  "PAYMENT_OUT": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment out"])};fn.source="Payment out";return fn;})(),
  "FUND_TRANSFER": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fund transfer"])};fn.source="Fund transfer";return fn;})(),
  "WITHDRAWAL": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawal"])};fn.source="Withdrawal";return fn;})(),
  "REDEMPTION": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Card redemption"])};fn.source="Card redemption";return fn;})(),
  "gold_refund": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold refund"])};fn.source="Gold refund";return fn;})(),
  "silver_delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver delivery"])};fn.source="Silver delivery";return fn;})(),
  "silver_sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver sell"])};fn.source="Silver sell";return fn;})(),
  "silver_purchase": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver purchase"])};fn.source="Silver purchase";return fn;})(),
  "silver_withdrawal": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver withdrawal"])};fn.source="Silver withdrawal";return fn;})(),
  "silver_gift": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver gift"])};fn.source="Silver gift";return fn;})(),
  "silver_purchase_interval": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver Purchase - Recurring"])};fn.source="Silver Purchase - Recurring";return fn;})(),
  "silver_transfer_in": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver transfer in"])};fn.source="Silver transfer in";return fn;})(),
  "silver_transfer_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver transfer out"])};fn.source="Silver transfer out";return fn;})(),
  "silver_refund": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver refund"])};fn.source="Silver refund";return fn;})(),
  "choose_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose your country"])};fn.source="Choose your country";return fn;})(),
  "line1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Street / House no."])};fn.source="Street / House no.";return fn;})(),
  "line2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Addition to address (optional)"])};fn.source="Addition to address (optional)";return fn;})(),
  "postalCode": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Postcode"])};fn.source="Postcode";return fn;})(),
  "town": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["City"])};fn.source="City";return fn;})(),
  "region": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["State"])};fn.source="State";return fn;})(),
  "general_conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["General conditions"])};fn.source="General conditions";return fn;})(),
  "privacy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Privacy policy"])};fn.source="Privacy policy";return fn;})(),
  "term_of_use": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Terms of use"])};fn.source="Terms of use";return fn;})(),
  "imprint": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Imprint"])};fn.source="Imprint";return fn;})(),
  "enter_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your address"])};fn.source="Your address";return fn;})(),
  "registration_done": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Congratulations"])};fn.source="Congratulations";return fn;})(),
  "verify_phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm your phone number"])};fn.source="Confirm your phone number";return fn;})(),
  "verify_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm your email"])};fn.source="Confirm your email";return fn;})(),
  "verify_email_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Check your inbox and enter the code we sent you via email here:"])};fn.source="Check your inbox and enter the code we sent you via email here:";return fn;})(),
  "reset_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reset your password"])};fn.source="Reset your password";return fn;})(),
  "email_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please provide an email"])};fn.source="Please provide an email";return fn;})(),
  "new_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New password"])};fn.source="New password";return fn;})(),
  "password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please provide a new password"])};fn.source="Please provide a new password";return fn;})(),
  "confirm_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm new password"])};fn.source="Confirm new password";return fn;})(),
  "confirm_password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please confirm your new password"])};fn.source="Please confirm your new password";return fn;})(),
  "password_reset_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password was reset successfully"])};fn.source="Password was reset successfully";return fn;})(),
  "confirm": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm"])};fn.source="Confirm";return fn;})(),
  "pin_reset_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pin rest successfully, please login to the app again to set a new pin"])};fn.source="Pin rest successfully, please login to the app again to set a new pin";return fn;})(),
  "resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are resetting your pin, please wait and don't leave the page.."])};fn.source="We are resetting your pin, please wait and don't leave the page..";return fn;})(),
  "error_resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Error resetting your pin"])};fn.source="Error resetting your pin";return fn;})(),
  "reset_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reset your pin"])};fn.source="Reset your pin";return fn;})(),
  "error_resetting_pin_no_token": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No token was available to rest your pin"])};fn.source="No token was available to rest your pin";return fn;})(),
  "depot_status_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Active"])};fn.source="Active";return fn;})(),
  "depot_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Canceled"])};fn.source="Canceled";return fn;})(),
  "depot_status_paused": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paused"])};fn.source="Paused";return fn;})(),
  "depot_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Completed"])};fn.source="Completed";return fn;})(),
  "depot_status_blocked": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Blocked"])};fn.source="Blocked";return fn;})(),
  "depot_status_applied_for_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Applied"])};fn.source="Applied";return fn;})(),
  "depot_status_withdrawn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Withdrawn"])};fn.source="Withdrawn";return fn;})(),
  "depot_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "status": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Status"])};fn.source="Status";return fn;})(),
  "amount_euro": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in euro"])};fn.source="Amount in euro";return fn;})(),
  "amount_gram": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount in gram"])};fn.source="Amount in gram";return fn;})(),
  "details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Details"])};fn.source="Details";return fn;})(),
  "Savingplan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings plan"])};fn.source="Savings plan";return fn;})(),
  "Gold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold"])};fn.source="Gold";return fn;})(),
  "Silver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver"])};fn.source="Silver";return fn;})(),
  "cant_load_depot_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are unable to load the list of depots"])};fn.source="We are unable to load the list of depots";return fn;})(),
  "order_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["completed"])};fn.source="completed";return fn;})(),
  "order_status_pending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pending"])};fn.source="pending";return fn;})(),
  "order_status_paid": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["paid"])};fn.source="paid";return fn;})(),
  "order_status_processing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["processing"])};fn.source="processing";return fn;})(),
  "order_status_payment_failed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["failed"])};fn.source="failed";return fn;})(),
  "order_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["canceled"])};fn.source="canceled";return fn;})(),
  "order_status_refunded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["refunded"])};fn.source="refunded";return fn;})(),
  "order_status_payment_outstanding": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiment outstanding"])};fn.source="Paiment outstanding";return fn;})(),
  "order_status_payment_inprogress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pending"])};fn.source="pending";return fn;})(),
  "order_status_reverted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])};fn.source="Reverted";return fn;})(),
  "type": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])};fn.source="Type";return fn;})(),
  "latest_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Recent transactions"])};fn.source="Recent transactions";return fn;})(),
  "depots": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depots"])};fn.source="Depots";return fn;})(),
  "request_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Forgotten your password?"])};fn.source="Forgotten your password?";return fn;})(),
  "password_request_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We have emailed you a link to reset your password."])};fn.source="We have emailed you a link to reset your password.";return fn;})(),
  "silver_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver price"])};fn.source="Silver price";return fn;})(),
  "gold_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold price"])};fn.source="Gold price";return fn;})(),
  "gold_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold gram price"])};fn.source="Gold gram price";return fn;})(),
  "silver_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Silver gram price"])};fn.source="Silver gram price";return fn;})(),
  "month": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Month"])};fn.source="Month";return fn;})(),
  "max": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])};fn.source="Max";return fn;})(),
  "year": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Year"])};fn.source="Year";return fn;})(),
  "depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])};fn.source="Depot";return fn;})(),
  "see_more": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["See more"])};fn.source="See more";return fn;})(),
  "date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date"])};fn.source="Date";return fn;})(),
  "course": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Course"])};fn.source="Course";return fn;})(),
  "purchase_amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Purchase amount"])};fn.source="Purchase amount";return fn;})(),
  "agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaction fee (agio)"])};fn.source="Transaction fee (agio)";return fn;})(),
  "gold_amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gold amount"])};fn.source="Gold amount";return fn;})(),
  "amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Amount"])};fn.source="Amount";return fn;})(),
  "bank_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bank transfer"])};fn.source="Bank transfer";return fn;})(),
  "bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bank account"])};fn.source="Bank account";return fn;})(),
  "payment_method": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment method"])};fn.source="Payment method";return fn;})(),
  "cant_load_orders_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We are not able to load the orders list"])};fn.source="We are not able to load the orders list";return fn;})(),
  "depot_detail": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])};fn.source="Depot details";return fn;})(),
  "dashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dashboard"])};fn.source="Dashboard";return fn;})(),
  "min": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])};fn.source="Min";return fn;})(),
  "depot_value": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot value"])};fn.source="Depot value";return fn;})(),
  "performance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])};fn.source="Performance";return fn;})(),
  "orders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])};fn.source="Orders";return fn;})(),
  "from": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["From"])};fn.source="From";return fn;})(),
  "contract_term": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])};fn.source="Contract term";return fn;})(),
  "interval_day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Interval day"])};fn.source="Interval day";return fn;})(),
  "whyInvestInGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Why invest in gold?"])};fn.source="Why invest in gold?";return fn;})(),
  "whyInvestInSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Why invest in silver?"])};fn.source="Why invest in silver?";return fn;})(),
  "advantagesOfSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Benefits of silver"])};fn.source="Benefits of silver";return fn;})(),
  "crisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Crisis-resistant investment"])};fn.source="Crisis-resistant investment";return fn;})(),
  "inflationProof": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Inflation proof"])};fn.source="Inflation proof";return fn;})(),
  "optimalWealthAccumulation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ideal for building wealth"])};fn.source="Ideal for building wealth";return fn;})(),
  "benefitsGoldGreenGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Ethical and sustainable in extraction, transportation and refining."])};fn.source="Green Gold: Ethical and sustainable in extraction, transportation and refining.";return fn;})(),
  "LBMAcertified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Certified by LBMA"])};fn.source="Certified by LBMA";return fn;})(),
  "noTva": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["VAT free"])};fn.source="VAT free";return fn;})(),
  "silverCrisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Crisis-resistant investment in physical silver"])};fn.source="Crisis-resistant investment in physical silver";return fn;})(),
  "ondemandDelivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["On demand delivery"])};fn.source="On demand delivery";return fn;})(),
  "securedStorageGermany": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Secured storage in Germany"])};fn.source="Secured storage in Germany";return fn;})(),
  "industryDemanded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["High demand by industries"])};fn.source="High demand by industries";return fn;})(),
  "storageInSwitzerland": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stored in Switzerland"])};fn.source="Stored in Switzerland";return fn;})(),
  "tvaExempted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["VAT exempt (19%) through storage in a duty-free warehouse in Switzerland."])};fn.source="VAT exempt (19%) through storage in a duty-free warehouse in Switzerland.";return fn;})(),
  "choose_purpose": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purose of the depot"])};fn.source="The purose of the depot";return fn;})(),
  "set_the_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot name"])};fn.source="Depot name";return fn;})(),
  "savings_plan_contract": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set the saving plan contract"])};fn.source="Set the saving plan contract";return fn;})(),
  "savings_plan_summary": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm saving plan contract"])};fn.source="Confirm saving plan contract";return fn;})(),
  "new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New depot"])};fn.source="New depot";return fn;})(),
  "new_gold_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New gold depot"])};fn.source="New gold depot";return fn;})(),
  "new_silver_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New silver depot"])};fn.source="New silver depot";return fn;})(),
  "start": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])};fn.source="Start";return fn;})(),
  "reasonForDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["What do you want to save for?"])};fn.source="What do you want to save for?";return fn;})(),
  "set": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])};fn.source="Set";return fn;})(),
  "createYourPlanInSomeMinutes": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup your savings plan within minutes"])};fn.source="Setup your savings plan within minutes";return fn;})(),
  "createGoldSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Build a gold fortune every month"])};fn.source="Build a gold fortune every month";return fn;})(),
  "createGoldSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["With the INAIA Gold Dinar savings plan you invest your money in pure physical gold (999/1000) without interest. You set an amount that you want to invest monthly. We buy gold from it every month and take care of the safe storage for you."])};fn.source="With the INAIA Gold Dinar savings plan you invest your money in pure physical gold (999/1000) without interest. You set an amount that you want to invest monthly. We buy gold from it every month and take care of the safe storage for you.";return fn;})(),
  "createSilverSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["INAIA Silver dirham enables you to invest your money in the purest physical silver (999/1000) without interest. You set the money amount that you want to invest, we will use that amount to buy silver for you and store it in a safe storage "])};fn.source="INAIA Silver dirham enables you to invest your money in the purest physical silver (999/1000) without interest. You set the money amount that you want to invest, we will use that amount to buy silver for you and store it in a safe storage ";return fn;})(),
  "createSilverSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Build a silver fortune every month"])};fn.source="Build a silver fortune every month";return fn;})(),
  "createDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create depot"])};fn.source="Create depot";return fn;})(),
  "depotCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your depot has been created successfully"])};fn.source="Your depot has been created successfully";return fn;})(),
  "createDepotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please confirm the conditions below to create your depot. There are no costs for creating the depot. Storage costs will be only applied once you have created your first transaction."])};fn.source="Please confirm the conditions below to create your depot. There are no costs for creating the depot. Storage costs will be only applied once you have created your first transaction.";return fn;})(),
  "setupSavingPlanNow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup savings plan"])};fn.source="Setup savings plan";return fn;})(),
  "errorOccured": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["An error has occured."])};fn.source="An error has occured.";return fn;})(),
  "tryAgain": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please try again."])};fn.source="Please try again.";return fn;})(),
  "calculateTrustData": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Calculate contract data"])};fn.source="Calculate contract data";return fn;})(),
  "projectedPerformance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance forecast"])};fn.source="Performance forecast";return fn;})(),
  "agioPaymentOption1Title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75/25"])};fn.source="75/25";return fn;})(),
  "agioPaymentOption2Title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pay immediately"])};fn.source="Pay immediately";return fn;})(),
  "fiftyOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We buy gold for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off."])};fn.source="We buy gold for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off.";return fn;})(),
  "fiftyOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We buy silver for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off."])};fn.source="We buy silver for you with 25% of the savings amount. We use the other 75% for the contractually agreed subscription fee until it has been totally paid off.";return fn;})(),
  "oneOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the gold purchase right from the start."])};fn.source="You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the gold purchase right from the start.";return fn;})(),
  "oneOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the silver purchase right from the start."])};fn.source="You pay the contractually agreed subscription fee immediately and get a 10% discount. The entire savings amount goes into the silver purchase right from the start.";return fn;})(),
  "seeReamboursmentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Show payment table"])};fn.source="Show payment table";return fn;})(),
  "startnewKyc": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start new process"])};fn.source="Start new process";return fn;})(),
  "startAutoIdtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to finish your identity check, you need to start the auto identification either in app or by link (please keep your ID card near to you)"])};fn.source="In order to finish your identity check, you need to start the auto identification either in app or by link (please keep your ID card near to you)";return fn;})(),
  "continueAutIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to finish your identity check, you need to continue the auto identification either in app or by link (please keep your ID card near to you)"])};fn.source="In order to finish your identity check, you need to continue the auto identification either in app or by link (please keep your ID card near to you)";return fn;})(),
  "failedAutoIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your auto identification failed, please start a new identity check process."])};fn.source="Your auto identification failed, please start a new identity check process.";return fn;})(),
  "continueAutoId": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Continue identification"])};fn.source="Continue identification";return fn;})(),
  "accountHolder": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Account holder"])};fn.source="Account holder";return fn;})(),
  "iban": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])};fn.source="IBAN";return fn;})(),
  "setAsDefault": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set as default"])};fn.source="Set as default";return fn;})(),
  "authorizeInaiaToAcceptPayment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["I authorize INAIA GmbH to accept payments from my account using collect direct debit. At the same time, I instruct my bank to redeem the direct debits drawn on my account by INAIA GmbH"])};fn.source="I authorize INAIA GmbH to accept payments from my account using collect direct debit. At the same time, I instruct my bank to redeem the direct debits drawn on my account by INAIA GmbH";return fn;})(),
  "kycStatusIsPending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We will now check your proof of identity. This process should be completed within 24 hours."])};fn.source="We will now check your proof of identity. This process should be completed within 24 hours.";return fn;})(),
  "kycStatusIsFailed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Unfortunately the verification process failed. Please start the process again and make sure that the details provided match those in your ID document."])};fn.source="Unfortunately the verification process failed. Please start the process again and make sure that the details provided match those in your ID document.";return fn;})(),
  "downloadPDF": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Download PDF"])};fn.source="Download PDF";return fn;})(),
  "startDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start Date"])};fn.source="Start Date";return fn;})(),
  "endDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["End Date"])};fn.source="End Date";return fn;})(),
  "write_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Write an answer..."])};fn.source="Write an answer...";return fn;})(),
  "send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Send message"])};fn.source="Send message";return fn;})(),
  "select_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please select a ticket to see description"])};fn.source="Please select a ticket to see description";return fn;})(),
  "new": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New"])};fn.source="New";return fn;})(),
  "closed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Closed"])};fn.source="Closed";return fn;})(),
  "open": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["open"])};fn.source="open";return fn;})(),
  "has_new_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Answered"])};fn.source="Answered";return fn;})(),
  "has_new_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New message"])};fn.source="New message";return fn;})(),
  "support_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Support tickets"])};fn.source="Support tickets";return fn;})(),
  "subject": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Subject"])};fn.source="Subject";return fn;})(),
  "creation_date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creation date"])};fn.source="Creation date";return fn;})(),
  "loading_ticket_details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Loading support ticket details"])};fn.source="Loading support ticket details";return fn;})(),
  "send": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Send"])};fn.source="Send";return fn;})(),
  "create": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create"])};fn.source="Create";return fn;})(),
  "create_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Create ticket"])};fn.source="Create ticket";return fn;})(),
  "new_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["New ticket"])};fn.source="New ticket";return fn;})(),
  "close_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["by closing this ticket you won't be able to continue this conversation"])};fn.source="by closing this ticket you won't be able to continue this conversation";return fn;})(),
  "close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Close ticket"])};fn.source="Close ticket";return fn;})(),
  "today": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Today"])};fn.source="Today";return fn;})(),
  "cant_send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])};fn.source="Enable to send your message due to an error";return fn;})(),
  "ticket_opened_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])};fn.source="The ticket was re-opened successfully";return fn;})(),
  "ticket_closed_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])};fn.source="This ticket was closed successfully";return fn;})(),
  "ticket_closed_unsuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])};fn.source="We couldn't close this ticket due to an error";return fn;})(),
  "are_you_sure_you_want_to_close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])};fn.source="Are you sure you want to close this ticket?";return fn;})(),
  "are_you_sure_you_want_to_open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])};fn.source="Are you sure you want to re-open this ticket?";return fn;})(),
  "open_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])};fn.source="To restart the conversation you can re-open the ticket";return fn;})(),
  "message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Message"])};fn.source="Message";return fn;})(),
  "client": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Client"])};fn.source="Client";return fn;})(),
  "write_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Write message ..."])};fn.source="Write message ...";return fn;})(),
  "ok": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])};fn.source="Ok";return fn;})(),
  "ticketCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your support ticket has been created successfully"])};fn.source="Your support ticket has been created successfully";return fn;})(),
  "open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])};fn.source="Open ticket";return fn;})(),
  "old_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Old password"])};fn.source="Old password";return fn;})(),
  "update_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Update password"])};fn.source="Update password";return fn;})(),
  "password_confirmation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm password"])};fn.source="Confirm password";return fn;})(),
  "password_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Password updated"])};fn.source="Password updated";return fn;})(),
  "password_update_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["After changing your password, you will be logged out. Please log in again with your new password to continue."])};fn.source="After changing your password, you will be logged out. Please log in again with your new password to continue.";return fn;})(),
  "password_mismatch_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The passwords you entered don't match."])};fn.source="The passwords you entered don't match.";return fn;})(),
  "depot_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot avatar updated"])};fn.source="Depot avatar updated";return fn;})(),
  "profile_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile avatar updated"])};fn.source="Profile avatar updated";return fn;})(),
  "minimumAmountRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["A minimum purchase amount of 25 ", _interpolate(_named("currency")), " is required"])};fn.source="A minimum purchase amount of 25 {{currency}} is required";return fn;})(),
  "showPreview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Preview"])};fn.source="Preview";return fn;})(),
  "depotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot"])};fn.source="Depot";return fn;})(),
  "buyingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The purchases in the third-party transaction (Wakalah transaction) will be executed promptly at the earliest possible time, but no later than within 2 business days after receipt of funds."])};fn.source="The purchases in the third-party transaction (Wakalah transaction) will be executed promptly at the earliest possible time, but no later than within 2 business days after receipt of funds.";return fn;})(),
  "purshaseSellNote": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Note: The overview given here does not represent a binding order acceptance. The purchase or sale order only comes into effect when the order confirmation is sent by e-mail.\nThe purchase and sale intervals in our terms and conditions apply."])};fn.source="Note: The overview given here does not represent a binding order acceptance. The purchase or sale order only comes into effect when the order confirmation is sent by e-mail.\nThe purchase and sale intervals in our terms and conditions apply.";return fn;})(),
  "buygoldtooltip": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The shown rate is only intended as an approximate estimate. The actual rate on the day your order is executed may deviate"])};fn.source="The shown rate is only intended as an approximate estimate. The actual rate on the day your order is executed may deviate";return fn;})(),
  "your_profile": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile"])};fn.source="Profile";return fn;})(),
  "sign_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Logout"])};fn.source="Logout";return fn;})(),
  "trading": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Trading"])};fn.source="Trading";return fn;})(),
  "select": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Select"])};fn.source="Select";return fn;})(),
  "buy_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets purchase"])};fn.source="Assets purchase";return fn;})(),
  "sell_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets sell"])};fn.source="Assets sell";return fn;})(),
  "asset_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Assets transfer"])};fn.source="Assets transfer";return fn;})(),
  "minimumGoldSellRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A minimum of 1 gram is required to sell"])};fn.source="A minimum of 1 gram is required to sell";return fn;})(),
  "youHaveLessThanOneGramSellAll": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have less than 1g of gold in this depot, you can only sell all your gold amount"])};fn.source="You have less than 1g of gold in this depot, you can only sell all your gold amount";return fn;})(),
  "deliverGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Given value must not exceed available gram amount and must be at least 20g"])};fn.source="Given value must not exceed available gram amount and must be at least 20g";return fn;})(),
  "orderOverview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order details"])};fn.source="Order details";return fn;})(),
  "execution": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Execution"])};fn.source="Execution";return fn;})(),
  "paymentMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])};fn.source="Payment";return fn;})(),
  "totalAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Total amount"])};fn.source="Total amount";return fn;})(),
  "maxAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Maximum amount"])};fn.source="Maximum amount";return fn;})(),
  "transaction_fee": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transaction fee"])};fn.source="Transaction fee";return fn;})(),
  "asSoonAsPossible": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Next possible*"])};fn.source="Next possible*";return fn;})(),
  "confirmwithmobiletext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using your mobile pin by using the app installed on your device"])};fn.source="In order to compelete your order please confirm it using your mobile pin by using the app installed on your device";return fn;})(),
  "confirmwithemailtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your email"])};fn.source="In order to compelete your order please confirm it using the code that was sent to your email";return fn;})(),
  "confirmwithsmstext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["In order to compelete your order please confirm it using the code that was sent to your phone number by sms"])};fn.source="In order to compelete your order please confirm it using the code that was sent to your phone number by sms";return fn;})(),
  "donthaveaccesstoconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You don't have access to"])};fn.source="You don't have access to";return fn;})(),
  "changeconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Change your confirmation method"])};fn.source="Change your confirmation method";return fn;})(),
  "confirmationMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation method"])};fn.source="Confirmation method";return fn;})(),
  "orderexpired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmation expired"])};fn.source="Order confirmation expired";return fn;})(),
  "sellGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Given value must not exceed available gold amount."])};fn.source="Given value must not exceed available gold amount.";return fn;})(),
  "availableAmountNonZero": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This depot has no assets, you are not able to sell"])};fn.source="This depot has no assets, you are not able to sell";return fn;})(),
  "blockedAmountdetails": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tradable amount"])};fn.source="Tradable amount";return fn;})(),
  "blockedAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Outstanding"])};fn.source="Outstanding";return fn;})(),
  "tradeableAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available"])};fn.source="Available";return fn;})(),
  "pendingOrders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pending orders"])};fn.source="Pending orders";return fn;})(),
  "blockedAmountExplanation": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["The amount of ", _interpolate(_named("blockedAmount")), " grams is currently not available for trading. This can be due to cancellation periods, the SEPA direct debit procedure or an outstanding subscription fee. As soon as safety periods have passed, the corresponding quantity is free for trade."])};fn.source="The amount of {{blockedAmount}} grams is currently not available for trading. This can be due to cancellation periods, the SEPA direct debit procedure or an outstanding subscription fee. As soon as safety periods have passed, the corresponding quantity is free for trade.";return fn;})(),
  "tomorrow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tomorrow"])};fn.source="Tomorrow";return fn;})(),
  "availableIn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Available in"])};fn.source="Available in";return fn;})(),
  "To": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["to"])};fn.source="to";return fn;})(),
  "available": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["available"])};fn.source="available";return fn;})(),
  "sellingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sales orders are always executed by INAIA at the earliest possible time, but no later than within 7 business days."])};fn.source="Sales orders are always executed by INAIA at the earliest possible time, but no later than within 7 business days.";return fn;})(),
  "TakingIntoAccountTheValidWorkingHours": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depending on trading hours."])};fn.source="Depending on trading hours.";return fn;})(),
  "deliveryAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Shipping address"])};fn.source="Shipping address";return fn;})(),
  "shippingCost": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Shipping costs"])};fn.source="Shipping costs";return fn;})(),
  "delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Delivery"])};fn.source="Delivery";return fn;})(),
  "receiverDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Receiver"])};fn.source="Receiver";return fn;})(),
  "orderconfirmed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Order confirmed"])};fn.source="Order confirmed";return fn;})(),
  "backToDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Back to depot"])};fn.source="Back to depot";return fn;})(),
  "welcome": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Welcome"])};fn.source="Welcome";return fn;})(),
  "orderdeclined": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The order has been declined"])};fn.source="The order has been declined";return fn;})(),
  "full_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "email_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])};fn.source="E-mail";return fn;})(),
  "phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Phone number"])};fn.source="Phone number";return fn;})(),
  "address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Address"])};fn.source="Address";return fn;})(),
  "update": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Update"])};fn.source="Update";return fn;})(),
  "delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Delete"])};fn.source="Delete";return fn;})(),
  "mark_default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mark as default"])};fn.source="Mark as default";return fn;})(),
  "add_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Add new bank account"])};fn.source="Add new bank account";return fn;})(),
  "language": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Language"])};fn.source="Language";return fn;})(),
  "bank_accounts": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Your bank accounts"])};fn.source="Your bank accounts";return fn;})(),
  "default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Default"])};fn.source="Default";return fn;})(),
  "de": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["German"])};fn.source="German";return fn;})(),
  "en": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["English"])};fn.source="English";return fn;})(),
  "fr": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["French"])};fn.source="French";return fn;})(),
  "cancel": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Cancel"])};fn.source="Cancel";return fn;})(),
  "confirm_delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirm deletion"])};fn.source="Confirm deletion";return fn;})(),
  "do_you_want_to_delete_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to delete this bank account?"])};fn.source="Are you sure you want to delete this bank account?";return fn;})(),
  "showing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Showing"])};fn.source="Showing";return fn;})(),
  "sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sell"])};fn.source="Sell";return fn;})(),
  "results": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["results"])};fn.source="results";return fn;})(),
  "of": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["of"])};fn.source="of";return fn;})(),
  "no_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan"])};fn.source="No savings plan";return fn;})(),
  "saving_plan_not_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["No savings plan is set"])};fn.source="No savings plan is set";return fn;})(),
  "add_saving_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Setup savings plan"])};fn.source="Setup savings plan";return fn;})(),
  "monthlysavingrate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Monthly savings"])};fn.source="Monthly savings";return fn;})(),
  "duration": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Duration"])};fn.source="Duration";return fn;})(),
  "years": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Years"])};fn.source="Years";return fn;})(),
  "startdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start date"])};fn.source="Start date";return fn;})(),
  "savings": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings sum"])};fn.source="Savings sum";return fn;})(),
  "returns": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Returns"])};fn.source="Returns";return fn;})(),
  "day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Day"])};fn.source="Day";return fn;})(),
  "billing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Billing"])};fn.source="Billing";return fn;})(),
  "payment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment"])};fn.source="Payment";return fn;})(),
  "deposit": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Deposit"])};fn.source="Deposit";return fn;})(),
  "total_agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Subscription fee"])};fn.source="Subscription fee";return fn;})(),
  "savings_rate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Savings rate"])};fn.source="Savings rate";return fn;})(),
  "accept": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Accept"])};fn.source="Accept";return fn;})(),
  "installment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Installment"])};fn.source="Installment";return fn;})(),
  "paymentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Payment table"])};fn.source="Payment table";return fn;})(),
  "creatingdepotpleasewait": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Creating depot, plase wait..."])};fn.source="Creating depot, plase wait...";return fn;})(),
  "goToDashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to dashbaord"])};fn.source="Go to dashbaord";return fn;})(),
  "chooseSenderDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choose the depot you want to send from"])};fn.source="Choose the depot you want to send from";return fn;})(),
  "please_verify_account_to_create_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Please finish your identity check in order to start creating depots"])};fn.source="Please finish your identity check in order to start creating depots";return fn;})(),
  "create_new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Currently you have no depots, please create new silver or gold depot to start."])};fn.source="Currently you have no depots, please create new silver or gold depot to start.";return fn;})(),
  "you_have_no_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no transactions"])};fn.source="You have no transactions";return fn;})(),
  "you_have_no_message_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no message yet."])};fn.source="You have no message yet.";return fn;})(),
  "you_have_no_support_ticket_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["You have no support ticket yet."])};fn.source="You have no support ticket yet.";return fn;})(),
  "personalInformation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Personal information"])};fn.source="Personal information";return fn;})(),
  "gender": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Gender"])};fn.source="Gender";return fn;})(),
  "birthdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Birthday"])};fn.source="Birthday";return fn;})(),
  "nationality": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nationality"])};fn.source="Nationality";return fn;})(),
  "birthplace": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Birthplace"])};fn.source="Birthplace";return fn;})(),
  "go_to_login": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Go to login"])};fn.source="Go to login";return fn;})()
},"fr":{
  "1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Janvier"])};fn.source="Janvier";return fn;})(),
  "2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Février"])};fn.source="Février";return fn;})(),
  "3": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mars"])};fn.source="Mars";return fn;})(),
  "4": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avril"])};fn.source="Avril";return fn;})(),
  "5": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mai"])};fn.source="Mai";return fn;})(),
  "6": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juin"])};fn.source="Juin";return fn;})(),
  "7": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Juillet"])};fn.source="Juillet";return fn;})(),
  "8": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aout"])};fn.source="Aout";return fn;})(),
  "9": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Septembre"])};fn.source="Septembre";return fn;})(),
  "10": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Octobre"])};fn.source="Octobre";return fn;})(),
  "11": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Novembre"])};fn.source="Novembre";return fn;})(),
  "12": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Décembre"])};fn.source="Décembre";return fn;})(),
  "15": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le quanze"])};fn.source="Le quanze";return fn;})(),
  "createAccount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un compte"])};fn.source="Créer un compte";return fn;})(),
  "plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre plan"])};fn.source="Choisissez votre plan";return fn;})(),
  "subscription_info": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Données personnelles"])};fn.source="Données personnelles";return fn;})(),
  "conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions générales"])};fn.source="Conditions générales";return fn;})(),
  "accept_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous souhaitons vous tenir informé par e-mail ou par d'autres moyens des mises à jour du produit et des autres services d'INAIA. Cochez la case et donnez-nous votre accord."])};fn.source="Nous souhaitons vous tenir informé par e-mail ou par d'autres moyens des mises à jour du produit et des autres services d'INAIA. Cochez la case et donnez-nous votre accord.";return fn;})(),
  "step": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Étape"])};fn.source="Étape";return fn;})(),
  "email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])};fn.source="E-mail";return fn;})(),
  "password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe"])};fn.source="Mot de passe";return fn;})(),
  "password_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le mot de passe doit contenir au moins 8 caractères et des caractères spéciaux."])};fn.source="Le mot de passe doit contenir au moins 8 caractères et des caractères spéciaux.";return fn;})(),
  "name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prénom"])};fn.source="Prénom";return fn;})(),
  "surname": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom"])};fn.source="Nom";return fn;})(),
  "referal_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Code de parrainage (facultatif)"])};fn.source="Code de parrainage (facultatif)";return fn;})(),
  "your_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre pays de résidence"])};fn.source="Choisissez votre pays de résidence";return fn;})(),
  "loading_country_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible de charger la liste des pays."])};fn.source="Erreur : impossible de charger la liste des pays.";return fn;})(),
  "features": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fonctionnalités"])};fn.source="Fonctionnalités";return fn;})(),
  "monthly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["mensuel"])};fn.source="mensuel";return fn;})(),
  "yearly": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["annuel"])};fn.source="annuel";return fn;})(),
  "buy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Acheter maintenant"])};fn.source="Acheter maintenant";return fn;})(),
  "choose_your_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre plan"])};fn.source="Choisissez votre plan";return fn;})(),
  "no_plans_for_selected_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Malheureusement, nous ne pouvons pas encore proposer de produits dans le pays que vous avez choisi."])};fn.source="Malheureusement, nous ne pouvons pas encore proposer de produits dans le pays que vous avez choisi.";return fn;})(),
  "plan_loading_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible de charger les plans."])};fn.source="Erreur : impossible de charger les plans.";return fn;})(),
  "plan_pricing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tarifs"])};fn.source="Tarifs";return fn;})(),
  "register": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["S'inscrire - INAIA"])};fn.source="S'inscrire - INAIA";return fn;})(),
  "download_document": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Télécharger le document"])};fn.source="Télécharger le document";return fn;})(),
  "server_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur inconnue. Veuillez réessayer ultérieurement."])};fn.source="Erreur inconnue. Veuillez réessayer ultérieurement.";return fn;})(),
  "error_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur"])};fn.source="Erreur";return fn;})(),
  "phone_number": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de téléphone portable"])};fn.source="Numéro de téléphone portable";return fn;})(),
  "phone_number_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Saisissez le code de vérification à 4 chiffres que nous vous avons envoyé au"])};fn.source="Saisissez le code de vérification à 4 chiffres que nous vous avons envoyé au";return fn;})(),
  "save": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enregistrer"])};fn.source="Enregistrer";return fn;})(),
  "account_info_error": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : impossible d'enregistrer les informations."])};fn.source="Erreur : impossible d'enregistrer les informations.";return fn;})(),
  "registration_success_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre compte a été créé avec succès."])};fn.source="Votre compte a été créé avec succès.";return fn;})(),
  "resend_email_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas reçu d'e-mail ? Renvoyer"])};fn.source="Vous n'avez pas reçu d'e-mail ? Renvoyer";return fn;})(),
  "resend_phone_code": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas reçu de SMS ? Renvoyer"])};fn.source="Vous n'avez pas reçu de SMS ? Renvoyer";return fn;})(),
  "email_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse e-mail vérifiée avec succès"])};fn.source="Adresse e-mail vérifiée avec succès";return fn;})(),
  "phone_number_verified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de téléphone portable vérifié avec succès."])};fn.source="Numéro de téléphone portable vérifié avec succès.";return fn;})(),
  "next": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Suivant"])};fn.source="Suivant";return fn;})(),
  "signin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Se connecter"])};fn.source="Se connecter";return fn;})(),
  "or": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ou bien"])};fn.source="Ou bien";return fn;})(),
  "emailAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse e-mail"])};fn.source="Adresse e-mail";return fn;})(),
  "choose_country": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez votre pays de résidence"])};fn.source="Choisissez votre pays de résidence";return fn;})(),
  "line1": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Rue et numéro"])};fn.source="Rue et numéro";return fn;})(),
  "line2": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Complément d'adresse (facultatif)"])};fn.source="Complément d'adresse (facultatif)";return fn;})(),
  "postalCode": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Code postal"])};fn.source="Code postal";return fn;})(),
  "town": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ville"])};fn.source="Ville";return fn;})(),
  "region": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Région"])};fn.source="Région";return fn;})(),
  "general_conditions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions générales"])};fn.source="Conditions générales";return fn;})(),
  "privacy": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Politique de confidentialité"])};fn.source="Politique de confidentialité";return fn;})(),
  "term_of_use": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Conditions d'utilisation"])};fn.source="Conditions d'utilisation";return fn;})(),
  "imprint": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mentions légales"])};fn.source="Mentions légales";return fn;})(),
  "enter_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre adresse de résidence"])};fn.source="Votre adresse de résidence";return fn;})(),
  "registration_done": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Terminé"])};fn.source="Terminé";return fn;})(),
  "verify_phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre numéro de téléphone portable"])};fn.source="Confirmez votre numéro de téléphone portable";return fn;})(),
  "verify_email": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre adresse e-mail"])};fn.source="Confirmez votre adresse e-mail";return fn;})(),
  "verify_email_infotext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Consultez votre boîte de réception et entrez ici le code que nous vous avons envoyé par e-mail :"])};fn.source="Consultez votre boîte de réception et entrez ici le code que nous vous avons envoyé par e-mail :";return fn;})(),
  "reset_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialiser votre mot de passe"])};fn.source="Réinitialiser votre mot de passe";return fn;})(),
  "email_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez fournir une adresse e-mail"])};fn.source="Veuillez fournir une adresse e-mail";return fn;})(),
  "new_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau mot de passe"])};fn.source="Nouveau mot de passe";return fn;})(),
  "password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez fournir un nouveau mot de passe"])};fn.source="Veuillez fournir un nouveau mot de passe";return fn;})(),
  "confirm_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmez votre nouveau mot de passe"])};fn.source="Confirmez votre nouveau mot de passe";return fn;})(),
  "confirm_password_is_required": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez confirmer votre nouveau mot de passe"])};fn.source="Veuillez confirmer votre nouveau mot de passe";return fn;})(),
  "password_reset_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialisation du mot de passe réussie"])};fn.source="Réinitialisation du mot de passe réussie";return fn;})(),
  "confirm": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer"])};fn.source="Confirmer";return fn;})(),
  "pin_reset_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialisation du code PIN réussie. Veuillez vous reconnecter à l'application pour définir un nouveau code PIN"])};fn.source="Réinitialisation du code PIN réussie. Veuillez vous reconnecter à l'application pour définir un nouveau code PIN";return fn;})(),
  "resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous réinitialisons votre code PIN. Veuillez patienter et ne pas quitter la page..."])};fn.source="Nous réinitialisons votre code PIN. Veuillez patienter et ne pas quitter la page...";return fn;})(),
  "error_resetting_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur lors de la réinitialisation de votre code PIN"])};fn.source="Erreur lors de la réinitialisation de votre code PIN";return fn;})(),
  "reset_pin": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Réinitialiser votre code PIN"])};fn.source="Réinitialiser votre code PIN";return fn;})(),
  "error_resetting_pin_no_token": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Erreur : jeton invalide"])};fn.source="Erreur : jeton invalide";return fn;})(),
  "depot_status_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Actif"])};fn.source="Actif";return fn;})(),
  "depot_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Annulé"])};fn.source="Annulé";return fn;})(),
  "depot_status_paused": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["En pause"])};fn.source="En pause";return fn;})(),
  "depot_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Achevé"])};fn.source="Achevé";return fn;})(),
  "depot_status_blocked": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bloqué"])};fn.source="Bloqué";return fn;})(),
  "depot_status_applied_for_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Appliqué"])};fn.source="Appliqué";return fn;})(),
  "depot_status_withdrawn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Retiré"])};fn.source="Retiré";return fn;})(),
  "depot_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom"])};fn.source="Nom";return fn;})(),
  "status": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Statut"])};fn.source="Statut";return fn;})(),
  "amount_euro": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant en euros"])};fn.source="Montant en euros";return fn;})(),
  "amount_gram": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Quantité en grammes"])};fn.source="Quantité en grammes";return fn;})(),
  "details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détails"])};fn.source="Détails";return fn;})(),
  "Savingplan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Plan d'épargne"])};fn.source="Plan d'épargne";return fn;})(),
  "Gold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Or"])};fn.source="Or";return fn;})(),
  "Silver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Argent"])};fn.source="Argent";return fn;})(),
  "cant_load_depot_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous n'arrivons pas à charger la liste des dépôts"])};fn.source="Nous n'arrivons pas à charger la liste des dépôts";return fn;})(),
  "order_status_completed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["complétée"])};fn.source="complétée";return fn;})(),
  "order_status_pending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en attente"])};fn.source="en attente";return fn;})(),
  "order_status_paid": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["payée"])};fn.source="payée";return fn;})(),
  "order_status_processing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en cours de traitement"])};fn.source="en cours de traitement";return fn;})(),
  "order_status_payment_failed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["échouée"])};fn.source="échouée";return fn;})(),
  "order_status_canceled": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["annulée"])};fn.source="annulée";return fn;})(),
  "order_status_refunded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["remboursée"])};fn.source="remboursée";return fn;})(),
  "order_status_payment_outstanding": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement en attente"])};fn.source="Paiement en attente";return fn;})(),
  "order_status_payment_inprogress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en attente"])};fn.source="en attente";return fn;})(),
  "order_status_reverted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Reverted"])};fn.source="Reverted";return fn;})(),
  "type": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Type"])};fn.source="Type";return fn;})(),
  "latest_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transactions récentes"])};fn.source="Transactions récentes";return fn;})(),
  "depots": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôts"])};fn.source="Dépôts";return fn;})(),
  "request_password_title": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe oublié?"])};fn.source="Mot de passe oublié?";return fn;})(),
  "password_request_with_success": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous vous avons envoyé un lien pour réinitialiser votre mot de passe."])};fn.source="Nous vous avons envoyé un lien pour réinitialiser votre mot de passe.";return fn;})(),
  "silver_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix argent"])};fn.source="Prix argent";return fn;})(),
  "gold_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix or"])};fn.source="Prix or";return fn;})(),
  "gold_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix de gram d'or"])};fn.source="Prix de gram d'or";return fn;})(),
  "silver_gram_price": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prix de gram d'argent "])};fn.source="Prix de gram d'argent ";return fn;})(),
  "month": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mois"])};fn.source="Mois";return fn;})(),
  "max": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Max"])};fn.source="Max";return fn;})(),
  "year": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Année"])};fn.source="Année";return fn;})(),
  "depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépot"])};fn.source="Dépot";return fn;})(),
  "see_more": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Plus d'infos"])};fn.source="Plus d'infos";return fn;})(),
  "date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date"])};fn.source="Date";return fn;})(),
  "course": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Taux"])};fn.source="Taux";return fn;})(),
  "purchase_amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'achat"])};fn.source="Montant de l'achat";return fn;})(),
  "agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais d'inscription"])};fn.source="Frais d'inscription";return fn;})(),
  "goldAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'actif"])};fn.source="Montant de l'actif";return fn;})(),
  "amount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant"])};fn.source="Montant";return fn;})(),
  "bank_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Virement bancaire"])};fn.source="Virement bancaire";return fn;})(),
  "bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Compte bancaire"])};fn.source="Compte bancaire";return fn;})(),
  "payment_method": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])};fn.source="Paiement";return fn;})(),
  "cant_load_orders_list": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous ne parvenons pas à charger la liste des commandes"])};fn.source="Nous ne parvenons pas à charger la liste des commandes";return fn;})(),
  "depot_detail": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Depot details"])};fn.source="Depot details";return fn;})(),
  "dashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tableau de bord"])};fn.source="Tableau de bord";return fn;})(),
  "min": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Min"])};fn.source="Min";return fn;})(),
  "depot_value": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Valeur du dépôt"])};fn.source="Valeur du dépôt";return fn;})(),
  "performance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Performance"])};fn.source="Performance";return fn;})(),
  "orders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Orders"])};fn.source="Orders";return fn;})(),
  "from": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["From"])};fn.source="From";return fn;})(),
  "contract_term": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Contract term"])};fn.source="Contract term";return fn;})(),
  "interval_day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Interval day"])};fn.source="Interval day";return fn;})(),
  "whyInvestInGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pourquoi investir dans l'or ?"])};fn.source="Pourquoi investir dans l'or ?";return fn;})(),
  "whyInvestInSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pourquoi investir dans l'argent ?"])};fn.source="Pourquoi investir dans l'argent ?";return fn;})(),
  "advantagesOfGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les avantages de l'or"])};fn.source="Les avantages de l'or";return fn;})(),
  "advantagesOfSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les avantages de l'argent"])};fn.source="Les avantages de l'argent";return fn;})(),
  "crisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Investissement résistant aux crises"])};fn.source="Investissement résistant aux crises";return fn;})(),
  "inflationProof": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["A l'abri de l'inflation"])};fn.source="A l'abri de l'inflation";return fn;})(),
  "optimalWealthAccumulation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Idéal pour se constituer un patrimoine"])};fn.source="Idéal pour se constituer un patrimoine";return fn;})(),
  "benefitsGoldGreenGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Green Gold: Éthique et durable dans l'extraction, le transport et le raffinage."])};fn.source="Green Gold: Éthique et durable dans l'extraction, le transport et le raffinage.";return fn;})(),
  "LBMAcertified": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Certifié LBMA"])};fn.source="Certifié LBMA";return fn;})(),
  "noTva": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exonéré de TVA"])};fn.source="Exonéré de TVA";return fn;})(),
  "silverCrisisResistant": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Investissement résistant aux crises"])};fn.source="Investissement résistant aux crises";return fn;})(),
  "ondemandDelivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Possibilité de livraison sur demande"])};fn.source="Possibilité de livraison sur demande";return fn;})(),
  "securedStorageGermany": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stockage dans un coffre-fort haute sécurité en Allemagne"])};fn.source="Stockage dans un coffre-fort haute sécurité en Allemagne";return fn;})(),
  "industryDemanded": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Une forte demande industrielle"])};fn.source="Une forte demande industrielle";return fn;})(),
  "storageInSwitzerland": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Stockage en Suisse"])};fn.source="Stockage en Suisse";return fn;})(),
  "tvaExempted": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exonération de la TVA (19 %) par le biais du stockage dans l'entrepôt franc de douane en Suisse."])};fn.source="Exonération de la TVA (19 %) par le biais du stockage dans l'entrepôt franc de douane en Suisse.";return fn;})(),
  "choose_purpose": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le but du dépôt"])};fn.source="Le but du dépôt";return fn;})(),
  "set_the_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nom de dépôt"])};fn.source="Nom de dépôt";return fn;})(),
  "savings_plan_contract": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Définir le contrat de plan d'épargne"])};fn.source="Définir le contrat de plan d'épargne";return fn;})(),
  "savings_plan_summary": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer le contrat de plan d'épargne"])};fn.source="Confirmer le contrat de plan d'épargne";return fn;})(),
  "new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau depôt"])};fn.source="Nouveau depôt";return fn;})(),
  "new_gold_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau depôt d'or"])};fn.source="Nouveau depôt d'or";return fn;})(),
  "new_silver_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau depôt d'argent"])};fn.source="Nouveau depôt d'argent";return fn;})(),
  "start": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Start"])};fn.source="Start";return fn;})(),
  "reasonForDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pour quoi souhaitez-vous épargner ?"])};fn.source="Pour quoi souhaitez-vous épargner ?";return fn;})(),
  "set": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Set"])};fn.source="Set";return fn;})(),
  "createYourPlanInSomeMinutes": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez votre plan d'épargne en quelques minutes"])};fn.source="Créez votre plan d'épargne en quelques minutes";return fn;})(),
  "createGoldSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["pour un avenir plus sûr."])};fn.source="pour un avenir plus sûr.";return fn;})(),
  "createGoldSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez une fortune avec un plan d'épargne à partir de 50 euros par mois."])};fn.source="Créez une fortune avec un plan d'épargne à partir de 50 euros par mois.";return fn;})(),
  "createSilverSavingsplanInfoText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créez une fortune avec un plan d'épargne à partir de 50 euros par mois."])};fn.source="Créez une fortune avec un plan d'épargne à partir de 50 euros par mois.";return fn;})(),
  "createSilverSavingsplanHeadline": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Pour un avenir plus sûr."])};fn.source="Pour un avenir plus sûr.";return fn;})(),
  "createDepotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez confirmer les conditions ci-dessous pour créer votre dépôt. Il n’y a aucun coût pour créer le dépôt. Les frais de stockage ne seront appliqués qu’une fois que vous aurez créé votre première transaction."])};fn.source="Veuillez confirmer les conditions ci-dessous pour créer votre dépôt. Il n’y a aucun coût pour créer le dépôt. Les frais de stockage ne seront appliqués qu’une fois que vous aurez créé votre première transaction.";return fn;})(),
  "createDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer le dépôt"])};fn.source="Créer le dépôt";return fn;})(),
  "depotCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre dépôt a été créé avec succès"])};fn.source="Votre dépôt a été créé avec succès";return fn;})(),
  "setupSavingPlanNow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un plan d'épargne"])};fn.source="Créer un plan d'épargne";return fn;})(),
  "errorOccured": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Une erreur s'est produite."])};fn.source="Une erreur s'est produite.";return fn;})(),
  "tryAgain": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez essayer à nouveau."])};fn.source="Veuillez essayer à nouveau.";return fn;})(),
  "calculateTrustData": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paramètres du contrat"])};fn.source="Paramètres du contrat";return fn;})(),
  "projectedPerformance": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Prévisions de performance"])};fn.source="Prévisions de performance";return fn;})(),
  "fiftyOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75 % pour les frais et 25 % pour l'achat d'or jusqu'à ce que vos frais d'inscription soient remboursé."])};fn.source="75 % pour les frais et 25 % pour l'achat d'or jusqu'à ce que vos frais d'inscription soient remboursé.";return fn;})(),
  "fiftyOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["75 % pour les frais et 25 % pour l'achat d'argent jusqu'à ce que vos frais d'inscription soient remboursé."])};fn.source="75 % pour les frais et 25 % pour l'achat d'argent jusqu'à ce que vos frais d'inscription soient remboursé.";return fn;})(),
  "oneOptionExplanationGold": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["100 % de votre épargne est affectée à l'achat d'or dès le début, et vous bénéficiez d'une remise de 10 %."])};fn.source="100 % de votre épargne est affectée à l'achat d'or dès le début, et vous bénéficiez d'une remise de 10 %.";return fn;})(),
  "oneOptionExplanationSilver": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["100 % de votre épargne est affectée à l'achat d'argent dès le début, et vous bénéficiez d'une remise de 10 %."])};fn.source="100 % de votre épargne est affectée à l'achat d'argent dès le début, et vous bénéficiez d'une remise de 10 %.";return fn;})(),
  "seeReamboursmentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afficher le tableau des paiements"])};fn.source="Afficher le tableau des paiements";return fn;})(),
  "startnewKyc": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lancez un nouveau processus"])};fn.source="Lancez un nouveau processus";return fn;})(),
  "startAutoIdtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de terminer le contrôle d'identité, vous devez lancer l'identification automatique soit dans l'application, soit par un lien (gardez votre carte d'identité près de vous)."])};fn.source="Afin de terminer le contrôle d'identité, vous devez lancer l'identification automatique soit dans l'application, soit par un lien (gardez votre carte d'identité près de vous).";return fn;})(),
  "continueAutIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de terminer la vérification de votre identité, vous devez continuer l'identification automatique soit dans l'application, soit par lien (veuillez garder votre carte d'identité près de vous)."])};fn.source="Afin de terminer la vérification de votre identité, vous devez continuer l'identification automatique soit dans l'application, soit par lien (veuillez garder votre carte d'identité près de vous).";return fn;})(),
  "failedAutoIdText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre identification automatique a échoué, veuillez lancer une nouvelle procédure de vérification d'identité."])};fn.source="Votre identification automatique a échoué, veuillez lancer une nouvelle procédure de vérification d'identité.";return fn;})(),
  "continueAutoId": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Continuez l'identification"])};fn.source="Continuez l'identification";return fn;})(),
  "accountHolder": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Titulaire du compte"])};fn.source="Titulaire du compte";return fn;})(),
  "iban": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["IBAN"])};fn.source="IBAN";return fn;})(),
  "setAsDefault": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Compte par défaut"])};fn.source="Compte par défaut";return fn;})(),
  "authorizeInaiaToAcceptPayment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["J'autorise l'INAIA GmbH à effectuer des paiements sur mon compte par prélèvement automatique. En même temps, je donne l'ordre à ma banque d'encaisser les prélèvements effectués sur mon compte par l'INAIA GmbH."])};fn.source="J'autorise l'INAIA GmbH à effectuer des paiements sur mon compte par prélèvement automatique. En même temps, je donne l'ordre à ma banque d'encaisser les prélèvements effectués sur mon compte par l'INAIA GmbH.";return fn;})(),
  "kycStatusIsPending": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nous allons maintenant vérifier votre pièce d’identité. Ce processus devrait être terminé dans les 24 heures."])};fn.source="Nous allons maintenant vérifier votre pièce d’identité. Ce processus devrait être terminé dans les 24 heures.";return fn;})(),
  "kycStatusIsFailed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Malheureusement, le processus de vérification a échoué. Veuillez recommencer le processus et assurez-vous que les informations fournies correspondent à celles de votre pièce d’identité."])};fn.source="Malheureusement, le processus de vérification a échoué. Veuillez recommencer le processus et assurez-vous que les informations fournies correspondent à celles de votre pièce d’identité.";return fn;})(),
  "downloadPDF": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Télécharger le PDF"])};fn.source="Télécharger le PDF";return fn;})(),
  "startDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de début"])};fn.source="Date de début";return fn;})(),
  "endDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de fin"])};fn.source="Date de fin";return fn;})(),
  "write_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Écrivez une réponse..."])};fn.source="Écrivez une réponse...";return fn;})(),
  "send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Envoyer un message"])};fn.source="Envoyer un message";return fn;})(),
  "select_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Wähle ein Ticket um Nachrichten einzusehen."])};fn.source="Wähle ein Ticket um Nachrichten einzusehen.";return fn;})(),
  "new": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau"])};fn.source="Nouveau";return fn;})(),
  "closed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Fermé"])};fn.source="Fermé";return fn;})(),
  "open": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ouvert"])};fn.source="Ouvert";return fn;})(),
  "has_new_answer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Répondu"])};fn.source="Répondu";return fn;})(),
  "has_new_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau message"])};fn.source="Nouveau message";return fn;})(),
  "support_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tickets de support"])};fn.source="Tickets de support";return fn;})(),
  "subject": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sujet"])};fn.source="Sujet";return fn;})(),
  "creation_date": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de création"])};fn.source="Date de création";return fn;})(),
  "loading_ticket_details": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Chargement des détails du ticket de support"])};fn.source="Chargement des détails du ticket de support";return fn;})(),
  "send": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Envoyer"])};fn.source="Envoyer";return fn;})(),
  "cancel": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Annulé"])};fn.source="Annulé";return fn;})(),
  "create": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créé"])};fn.source="Créé";return fn;})(),
  "create_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créé ticket"])};fn.source="Créé ticket";return fn;})(),
  "new_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nouveau ticket"])};fn.source="Nouveau ticket";return fn;})(),
  "close_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["en fermant ce ticket vous ne pourrez plus continuer cette conversation"])};fn.source="en fermant ce ticket vous ne pourrez plus continuer cette conversation";return fn;})(),
  "close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ticket schließen"])};fn.source="Ticket schließen";return fn;})(),
  "today": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Heute"])};fn.source="Heute";return fn;})(),
  "cant_send_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Enable to send your message due to an error"])};fn.source="Enable to send your message due to an error";return fn;})(),
  "ticket_closed_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["This ticket was closed successfully"])};fn.source="This ticket was closed successfully";return fn;})(),
  "ticket_opened_successfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["The ticket was re-opened successfully"])};fn.source="The ticket was re-opened successfully";return fn;})(),
  "ticket_closed_unsuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["We couldn't close this ticket due to an error"])};fn.source="We couldn't close this ticket due to an error";return fn;})(),
  "are_you_sure_you_want_to_close_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to close this ticket?"])};fn.source="Are you sure you want to close this ticket?";return fn;})(),
  "are_you_sure_you_want_to_open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Are you sure you want to re-open this ticket?"])};fn.source="Are you sure you want to re-open this ticket?";return fn;})(),
  "open_ticket_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["To restart the conversation you can re-open the ticket"])};fn.source="To restart the conversation you can re-open the ticket";return fn;})(),
  "message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Message"])};fn.source="Message";return fn;})(),
  "client": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Cliente"])};fn.source="Cliente";return fn;})(),
  "write_message": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Écrivez message ..."])};fn.source="Écrivez message ...";return fn;})(),
  "ok": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ok"])};fn.source="Ok";return fn;})(),
  "ticketCreatedSuccessfully": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Votre ticket a été créé avec succès"])};fn.source="Votre ticket a été créé avec succès";return fn;})(),
  "open_ticket": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Open ticket"])};fn.source="Open ticket";return fn;})(),
  "old_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ancien mot de passe"])};fn.source="Ancien mot de passe";return fn;})(),
  "update_password": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mettre à jour le mot de passe"])};fn.source="Mettre à jour le mot de passe";return fn;})(),
  "password_confirmation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer le mot de passe"])};fn.source="Confirmer le mot de passe";return fn;})(),
  "password_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Mot de passe mis à jour"])};fn.source="Mot de passe mis à jour";return fn;})(),
  "password_update_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Après avoir changé votre mot de passe, vous serez déconnecté(e). Veuillez vous reconnecter avec votre nouveau mot de passe pour continuer."])};fn.source="Après avoir changé votre mot de passe, vous serez déconnecté(e). Veuillez vous reconnecter avec votre nouveau mot de passe pour continuer.";return fn;})(),
  "password_mismatch_alert": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les mots de passe que vous avez saisis ne correspondent pas."])};fn.source="Les mots de passe que vous avez saisis ne correspondent pas.";return fn;})(),
  "depot_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avatar du dépôt mis à jour"])};fn.source="Avatar du dépôt mis à jour";return fn;})(),
  "profile_avatar_updated": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Avatar du profil mis à jour"])};fn.source="Avatar du profil mis à jour";return fn;})(),
  "minimumAmountRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Un montant minimum d'achat de 25 ", _interpolate(_named("currency")), " est requis"])};fn.source="Un montant minimum d'achat de 25 {{currency}} est requis";return fn;})(),
  "showPreview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aperçu"])};fn.source="Aperçu";return fn;})(),
  "depotText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôt"])};fn.source="Dépôt";return fn;})(),
  "buyingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les achats effectués dans le cadre d'une transaction pour le compte de tiers (Transaction Wakalah) sont exécutés sans délai, dès que possible et au plus tard dans les deux jours ouvrables suivant la réception des fonds."])};fn.source="Les achats effectués dans le cadre d'une transaction pour le compte de tiers (Transaction Wakalah) sont exécutés sans délai, dès que possible et au plus tard dans les deux jours ouvrables suivant la réception des fonds.";return fn;})(),
  "purshaseSellNote": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Remarque : l'aperçu donné ici ne constitue pas une acceptation de commande contraignante. L'ordre d'achat ou de vente n'entre en vigueur que lorsque la confirmation de la commande est envoyée par courrier électronique.  Nos conditions générales de vente s'appliquent."])};fn.source="Remarque : l'aperçu donné ici ne constitue pas une acceptation de commande contraignante. L'ordre d'achat ou de vente n'entre en vigueur que lorsque la confirmation de la commande est envoyée par courrier électronique.  Nos conditions générales de vente s'appliquent.";return fn;})(),
  "buygoldtooltip": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le taux indiqué n'est qu'une estimation approximative. Le taux réel le jour de l'exécution de votre ordre peut être différent"])};fn.source="Le taux indiqué n'est qu'une estimation approximative. Le taux réel le jour de l'exécution de votre ordre peut être différent";return fn;})(),
  "your_profile": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Profile"])};fn.source="Profile";return fn;})(),
  "sign_out": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Déconnexion"])};fn.source="Déconnexion";return fn;})(),
  "trading": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Marché"])};fn.source="Marché";return fn;})(),
  "select": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Select"])};fn.source="Select";return fn;})(),
  "buy_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Achat d'actifs "])};fn.source="Achat d'actifs ";return fn;})(),
  "sell_assets": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vente d'actifs "])};fn.source="Vente d'actifs ";return fn;})(),
  "asset_transfer": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Transfert d'actifs"])};fn.source="Transfert d'actifs";return fn;})(),
  "minimumGoldSellRequired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Un minimum de 1 gramme est nécessaire pour pouvoir vendre"])};fn.source="Un minimum de 1 gramme est nécessaire pour pouvoir vendre";return fn;})(),
  "youHaveLessThanOneGramSellAll": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous avez moins de 1g d'or dans ce dépôt, vous ne pouvez vendre que la totalité de votre or."])};fn.source="Vous avez moins de 1g d'or dans ce dépôt, vous ne pouvez vendre que la totalité de votre or.";return fn;})(),
  "deliverGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La valeur donnée ne doit pas dépasser la quantité de grammes disponibles et doit être d'au moins 20 g."])};fn.source="La valeur donnée ne doit pas dépasser la quantité de grammes disponibles et doit être d'au moins 20 g.";return fn;})(),
  "orderOverview": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détails de la commande"])};fn.source="Détails de la commande";return fn;})(),
  "execution": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Exécution"])};fn.source="Exécution";return fn;})(),
  "paymentMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])};fn.source="Paiement";return fn;})(),
  "transaction_fee": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commission de transaction"])};fn.source="Commission de transaction";return fn;})(),
  "totalAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant total"])};fn.source="Montant total";return fn;})(),
  "asSoonAsPossible": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dès que possible*"])};fn.source="Dès que possible*";return fn;})(),
  "confirmwithmobiletext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant votre code PIN mobile à l'aide de l'application installée sur votre appareil."])};fn.source="Afin de finaliser votre commande, veuillez la confirmer en utilisant votre code PIN mobile à l'aide de l'application installée sur votre appareil.";return fn;})(),
  "confirmwithemailtext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui vous a été envoyé par e-mail."])};fn.source="Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui vous a été envoyé par e-mail.";return fn;})(),
  "confirmwithsmstext": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui a été envoyé à votre numéro de téléphone par sms."])};fn.source="Afin de finaliser votre commande, veuillez la confirmer en utilisant le code qui a été envoyé à votre numéro de téléphone par sms.";return fn;})(),
  "donthaveaccesstoconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas accès à votre"])};fn.source="Vous n'avez pas accès à votre";return fn;})(),
  "changeconfirmationmethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Modifier la méthode de confirmation"])};fn.source="Modifier la méthode de confirmation";return fn;})(),
  "confirmationMethod": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Méthode de confirmation"])};fn.source="Méthode de confirmation";return fn;})(),
  "orderexpired": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmation de commande expirée"])};fn.source="Confirmation de commande expirée";return fn;})(),
  "sellGoldWarningText": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Le montant ne doit pas dépasser la quantité d'or disponible"])};fn.source="Le montant ne doit pas dépasser la quantité d'or disponible";return fn;})(),
  "availableAmountNonZero": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ce dépôt n'a pas d'actif, vous ne pouvez rien vendre."])};fn.source="Ce dépôt n'a pas d'actif, vous ne pouvez rien vendre.";return fn;})(),
  "blockedAmountdetails": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Détail des montants bloqués"])};fn.source="Détail des montants bloqués";return fn;})(),
  "blockedAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant bloqué"])};fn.source="Montant bloqué";return fn;})(),
  "tradeableAmount": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant disponible"])};fn.source="Montant disponible";return fn;})(),
  "pendingOrders": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commandes en pause"])};fn.source="Commandes en pause";return fn;})(),
  "blockedAmountExplanation": (()=>{const fn=(ctx) => {const { normalize: _normalize, interpolate: _interpolate, named: _named } = ctx;return _normalize(["Le montant de ", _interpolate(_named("blockedAmount")), " grammes n'est actuellement pas disponible. Cela peut être dû à des délais d'annulation, à la procédure de prélèvement SEPA ou à des frais d'abonnement impayés. Dès que les délais de sécurité sont écoulés, la quantité correspondante est libérée pour la vente."])};fn.source="Le montant de {{blockedAmount}} grammes n'est actuellement pas disponible. Cela peut être dû à des délais d'annulation, à la procédure de prélèvement SEPA ou à des frais d'abonnement impayés. Dès que les délais de sécurité sont écoulés, la quantité correspondante est libérée pour la vente.";return fn;})(),
  "tomorrow": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["demain"])};fn.source="demain";return fn;})(),
  "availableIn": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Disponible en"])};fn.source="Disponible en";return fn;})(),
  "To": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["à"])};fn.source="à";return fn;})(),
  "available": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["disponible"])};fn.source="disponible";return fn;})(),
  "sellingNoteOnExecutionDate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Les ordres de vente sont toujours exécutés par INAIA dès que possible, mais au plus tard dans les 7 jours ouvrables."])};fn.source="Les ordres de vente sont toujours exécutés par INAIA dès que possible, mais au plus tard dans les 7 jours ouvrables.";return fn;})(),
  "TakingIntoAccountTheValidWorkingHours": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["En fonction des heures de trading."])};fn.source="En fonction des heures de trading.";return fn;})(),
  "deliveryAddress": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Adresse de livraison"])};fn.source="Adresse de livraison";return fn;})(),
  "shippingCost": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais de livraison"])};fn.source="Frais de livraison";return fn;})(),
  "delivery": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Livraison"])};fn.source="Livraison";return fn;})(),
  "receiverDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Récepteur"])};fn.source="Récepteur";return fn;})(),
  "orderconfirmed": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Commande confirmée"])};fn.source="Commande confirmée";return fn;})(),
  "backToDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["retour au dépôt"])};fn.source="retour au dépôt";return fn;})(),
  "welcome": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Bienvenue"])};fn.source="Bienvenue";return fn;})(),
  "orderdeclined": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La commande a été rejetée"])};fn.source="La commande a été rejetée";return fn;})(),
  "full_name": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Name"])};fn.source="Name";return fn;})(),
  "email_address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["E-mail"])};fn.source="E-mail";return fn;})(),
  "phone": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Numéro de portable"])};fn.source="Numéro de portable";return fn;})(),
  "address": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Addresse"])};fn.source="Addresse";return fn;})(),
  "update": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Modifier"])};fn.source="Modifier";return fn;})(),
  "delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Supprimer"])};fn.source="Supprimer";return fn;})(),
  "mark_default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Marquer comme par défaut"])};fn.source="Marquer comme par défaut";return fn;})(),
  "add_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Ajouter un compte bancaire"])};fn.source="Ajouter un compte bancaire";return fn;})(),
  "language": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Langue"])};fn.source="Langue";return fn;})(),
  "bank_accounts": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vos comptes bancaires"])};fn.source="Vos comptes bancaires";return fn;})(),
  "default": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Par défaut"])};fn.source="Par défaut";return fn;})(),
  "de": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Allemand"])};fn.source="Allemand";return fn;})(),
  "en": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Anglais"])};fn.source="Anglais";return fn;})(),
  "fr": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Français"])};fn.source="Français";return fn;})(),
  "confirm_delete": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Confirmer la suppression"])};fn.source="Confirmer la suppression";return fn;})(),
  "do_you_want_to_delete_bank_account": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Êtes-vous sûr de vouloir supprimer ce compte bancaire ?"])};fn.source="Êtes-vous sûr de vouloir supprimer ce compte bancaire ?";return fn;})(),
  "showing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Affichant"])};fn.source="Affichant";return fn;})(),
  "sell": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vente"])};fn.source="Vente";return fn;})(),
  "results": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["résultats"])};fn.source="résultats";return fn;})(),
  "of": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["de"])};fn.source="de";return fn;})(),
  "no_savings_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aucun plan d'épargne"])};fn.source="Aucun plan d'épargne";return fn;})(),
  "saving_plan_not_active": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aucun plan d'épargne n'est établi"])};fn.source="Aucun plan d'épargne n'est établi";return fn;})(),
  "add_saving_plan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Créer un plan d'épargne"])};fn.source="Créer un plan d'épargne";return fn;})(),
  "monthlysavingrate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versement mensuel"])};fn.source="Versement mensuel";return fn;})(),
  "duration": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["La durée"])};fn.source="La durée";return fn;})(),
  "years": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["années"])};fn.source="années";return fn;})(),
  "startdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de début du contrat"])};fn.source="Date de début du contrat";return fn;})(),
  "savings": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'épargne"])};fn.source="Montant de l'épargne";return fn;})(),
  "returns": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Rendements"])};fn.source="Rendements";return fn;})(),
  "day": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Jour"])};fn.source="Jour";return fn;})(),
  "billing": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Facturation"])};fn.source="Facturation";return fn;})(),
  "payment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Paiement"])};fn.source="Paiement";return fn;})(),
  "deposit": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Dépôt"])};fn.source="Dépôt";return fn;})(),
  "total_agio": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Frais d'inscription"])};fn.source="Frais d'inscription";return fn;})(),
  "savings_rate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Montant de l'épargne"])};fn.source="Montant de l'épargne";return fn;})(),
  "accept": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Accepter"])};fn.source="Accepter";return fn;})(),
  "installment": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Versement"])};fn.source="Versement";return fn;})(),
  "paymentPlan": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Tableau des paiements"])};fn.source="Tableau des paiements";return fn;})(),
  "creatingdepotpleasewait": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Création du dépôt, veuillez patienter..."])};fn.source="Création du dépôt, veuillez patienter...";return fn;})(),
  "goToDashboard": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Aller au tableau de bord"])};fn.source="Aller au tableau de bord";return fn;})(),
  "chooseSenderDepot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Choisissez le dépôt à partir duquel vous souhaitez effectuer l'envoi"])};fn.source="Choisissez le dépôt à partir duquel vous souhaitez effectuer l'envoi";return fn;})(),
  "please_verify_account_to_create_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Veuillez terminer votre vérification d'identité afin de pouvoir commencer à créer des dépôts."])};fn.source="Veuillez terminer votre vérification d'identité afin de pouvoir commencer à créer des dépôts.";return fn;})(),
  "create_new_depot": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez actuellement aucun dépôt, veuillez créer un nouveau dépôt d'argent ou d'or pour commencer."])};fn.source="Vous n'avez actuellement aucun dépôt, veuillez créer un nouveau dépôt d'argent ou d'or pour commencer.";return fn;})(),
  "you_have_no_transactions": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez aucune transaction"])};fn.source="Vous n'avez aucune transaction";return fn;})(),
  "personalInformation": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Données personnelles"])};fn.source="Données personnelles";return fn;})(),
  "gender": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Sexe"])};fn.source="Sexe";return fn;})(),
  "birthdate": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Date de naissance"])};fn.source="Date de naissance";return fn;})(),
  "nationality": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Nationalité"])};fn.source="Nationalité";return fn;})(),
  "birthplace": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Lieu de naissance"])};fn.source="Lieu de naissance";return fn;})(),
  "go_to_login": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Connectez-vous ici"])};fn.source="Connectez-vous ici";return fn;})(),
  "you_have_no_message_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas encore de message."])};fn.source="Vous n'avez pas encore de message.";return fn;})(),
  "you_have_no_support_ticket_yet": (()=>{const fn=(ctx) => {const { normalize: _normalize } = ctx;return _normalize(["Vous n'avez pas encore de ticket de support."])};fn.source="Vous n'avez pas encore de ticket de support.";return fn;})()
},}),})
  nuxtI18nOptions.vueI18n = await vueI18nOptionsLoader(context)
  nuxtI18nOptions.locales = [Object({"name":"Deutsch","code":"de","iso":"de-DE","file":"de/de","img":"/assets/img/flags/germany-48.png","path":undefined}),Object({"name":"English","code":"en","iso":"en-GB","file":"en/en","img":"/assets/img/flags/great-britain-48.png","path":undefined}),Object({"name":"Français","code":"fr","iso":"fr-FR","file":"fr/fr","img":"/assets/img/flags/france-48.png","path":undefined})]
  nuxtI18nOptions.defaultLocale = "en"
  nuxtI18nOptions.defaultDirection = "ltr"
  nuxtI18nOptions.routesNameSeparator = "___"
  nuxtI18nOptions.trailingSlash = false
  nuxtI18nOptions.defaultLocaleRouteNameSuffix = "default"
  nuxtI18nOptions.strategy = "prefix"
  nuxtI18nOptions.lazy = true
  nuxtI18nOptions.langDir = "lang/"
  nuxtI18nOptions.rootRedirect = null
  nuxtI18nOptions.detectBrowserLanguage = Object({"alwaysRedirect":false,"cookieCrossOrigin":false,"cookieDomain":null,"cookieKey":"i18n_redirected","cookieSecure":false,"fallbackLocale":"","redirectOn":"root","useCookie":true})
  nuxtI18nOptions.differentDomains = false
  nuxtI18nOptions.baseUrl = ""
  nuxtI18nOptions.dynamicRouteParams = false
  nuxtI18nOptions.customRoutes = "page"
  nuxtI18nOptions.pages = Object({})
  nuxtI18nOptions.skipSettingLocaleOnNavigate = false
  nuxtI18nOptions.onBeforeLanguageSwitch = (() => "")
  nuxtI18nOptions.onLanguageSwitched = (() => null)
  nuxtI18nOptions.types = undefined
  nuxtI18nOptions.debug = false
  return nuxtI18nOptions
}

export const nuxtI18nOptionsDefault = Object({vueI18n: undefined,locales: [],defaultLocale: "",defaultDirection: "ltr",routesNameSeparator: "___",trailingSlash: false,defaultLocaleRouteNameSuffix: "default",strategy: "prefix_except_default",lazy: false,langDir: null,rootRedirect: null,detectBrowserLanguage: Object({"alwaysRedirect":false,"cookieCrossOrigin":false,"cookieDomain":null,"cookieKey":"i18n_redirected","cookieSecure":false,"fallbackLocale":"","redirectOn":"root","useCookie":true}),differentDomains: false,baseUrl: "",dynamicRouteParams: false,customRoutes: "page",pages: Object({}),skipSettingLocaleOnNavigate: false,onBeforeLanguageSwitch: (() => ""),onLanguageSwitched: (() => null),types: undefined,debug: false})

export const nuxtI18nInternalOptions = Object({__normalizedLocales: [Object({"name":"Deutsch","code":"de","iso":"de-DE","file":"de/de","img":"/assets/img/flags/germany-48.png","path":undefined}),Object({"name":"English","code":"en","iso":"en-GB","file":"en/en","img":"/assets/img/flags/great-britain-48.png","path":undefined}),Object({"name":"Français","code":"fr","iso":"fr-FR","file":"fr/fr","img":"/assets/img/flags/france-48.png","path":undefined})]})
export const NUXT_I18N_MODULE_ID = "@nuxtjs/i18n"
export const isSSG = false
export const isSSR = true
